{"version":3,"file":"reset.js","sourceRoot":"","sources":["reset.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,yCAAqD;AAGrD,sBACE,KAA+B,EAC/B,MAAuB;IAEvB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,qBAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QACjE,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,MAAM,cACD,KAAK,IACR,OAAO,EAAE,KAAK,EACd,UAAU,EAAE,IAAI,EAChB,SAAS,EAAE,KAAK,EAChB,WAAW,EAAE,IAAI,EACjB,WAAW,EAAE,KAAK,EAClB,aAAa,EAAE,IAAI,IACnB;AACJ,CAAC;AArBD,oCAqBC","sourcesContent":["import { Actions, ResetAction } from '../../actions';\r\nimport { FormControlState, FormControlValueTypes } from '../../state';\r\n\r\nexport function resetReducer<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (action.type !== ResetAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (state.isPristine && state.isUntouched && state.isUnsubmitted) {\r\n    return state;\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    isDirty: false,\r\n    isPristine: true,\r\n    isTouched: false,\r\n    isUntouched: true,\r\n    isSubmitted: false,\r\n    isUnsubmitted: true,\r\n  };\r\n}\r\n"]}