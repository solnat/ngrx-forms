{"version":3,"file":"enable.spec.js","sourceRoot":"","sources":["enable.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qCAAqD;AACrD,yCAA6C;AAC7C,mCAAyC;AAEzC,QAAQ,CAAC,4BAA4B,EAAE;IACrC,IAAM,eAAe,GAAG,SAAS,CAAC;IAClC,IAAM,0BAA0B,GAAG,EAAE,CAAC;IACtC,IAAM,aAAa,GAAG,8BAAsB,CAAS,eAAe,EAAE,0BAA0B,CAAC,CAAC;IAElG,EAAE,CAAC,yCAAyC,EAAE,cAAM,OAAA,MAAM,CAAC,sBAAa,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,EAAE,EAAS,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAA7E,CAA6E,CAAC,CAAC;IAEnI,EAAE,CAAC,iCAAiC,EAAE;QACpC,IAAM,KAAK,gBAAQ,aAAa,IAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,GAAE,CAAC;QACvE,IAAM,WAAW,GAAG,sBAAa,CAAC,KAAK,EAAE,IAAI,sBAAY,CAAC,eAAe,CAAC,CAAC,CAAC;QAC5E,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE;QACvC,IAAM,WAAW,GAAG,sBAAa,CAAC,aAAa,EAAE,IAAI,sBAAY,CAAC,eAAe,CAAC,CAAC,CAAC;QACpF,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { createFormControlState } from '../../state';\r\nimport { EnableAction } from '../../actions';\r\nimport { enableReducer } from './enable';\r\n\r\ndescribe('form control enableReducer', () => {\r\n  const FORM_CONTROL_ID = 'test ID';\r\n  const INITIAL_FORM_CONTROL_VALUE = '';\r\n  const INITIAL_STATE = createFormControlState<string>(FORM_CONTROL_ID, INITIAL_FORM_CONTROL_VALUE);\r\n\r\n  it('should skip any actionof the wrong type', () => expect(enableReducer(INITIAL_STATE, { type: '' } as any)).toBe(INITIAL_STATE));\r\n\r\n  it('should update state if disabled', () => {\r\n    const state = { ...INITIAL_STATE, isEnabled: false, isDisabled: true };\r\n    const resultState = enableReducer(state, new EnableAction(FORM_CONTROL_ID));\r\n    expect(resultState.isEnabled).toEqual(true);\r\n    expect(resultState.isDisabled).toEqual(false);\r\n  });\r\n\r\n  it('should not update state if enabled', () => {\r\n    const resultState = enableReducer(INITIAL_STATE, new EnableAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE);\r\n  });\r\n});\r\n"]}