{"version":3,"file":"unfocus.spec.js","sourceRoot":"","sources":["unfocus.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qCAAqD;AACrD,yCAA8C;AAC9C,qCAA2C;AAE3C,QAAQ,CAAC,6BAA6B,EAAE;IACtC,IAAM,eAAe,GAAG,SAAS,CAAC;IAClC,IAAM,0BAA0B,GAAG,EAAE,CAAC;IACtC,IAAM,aAAa,GAAG,8BAAsB,CAAS,eAAe,EAAE,0BAA0B,CAAC,CAAC;IAElG,EAAE,CAAC,yCAAyC,EAAE,cAAM,OAAA,MAAM,CAAC,wBAAc,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,EAAE,EAAS,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAA9E,CAA8E,CAAC,CAAC;IAEpI,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,KAAK,gBAAQ,aAAa,IAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,GAAE,CAAC;QACxE,IAAM,WAAW,GAAG,wBAAc,CAAC,KAAK,EAAE,IAAI,uBAAa,CAAC,eAAe,CAAC,CAAC,CAAC;QAC9E,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACzC,IAAM,WAAW,GAAG,wBAAc,CAAC,aAAa,EAAE,IAAI,uBAAa,CAAC,eAAe,CAAC,CAAC,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { createFormControlState } from '../../state';\r\nimport { UnfocusAction } from '../../actions';\r\nimport { unfocusReducer } from './unfocus';\r\n\r\ndescribe('form control unfocusReducer', () => {\r\n  const FORM_CONTROL_ID = 'test ID';\r\n  const INITIAL_FORM_CONTROL_VALUE = '';\r\n  const INITIAL_STATE = createFormControlState<string>(FORM_CONTROL_ID, INITIAL_FORM_CONTROL_VALUE);\r\n\r\n  it('should skip any actionof the wrong type', () => expect(unfocusReducer(INITIAL_STATE, { type: '' } as any)).toBe(INITIAL_STATE));\r\n\r\n  it('should update state if focused', () => {\r\n    const state = { ...INITIAL_STATE, isFocused: true, isUnfocused: false };\r\n    const resultState = unfocusReducer(state, new UnfocusAction(FORM_CONTROL_ID));\r\n    expect(resultState.isFocused).toEqual(false);\r\n    expect(resultState.isUnfocused).toEqual(true);\r\n  });\r\n\r\n  it('should not update state if unfocused', () => {\r\n    const resultState = unfocusReducer(INITIAL_STATE, new UnfocusAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE);\r\n  });\r\n});\r\n"]}