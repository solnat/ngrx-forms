{"version":3,"file":"set-async-error.spec.js","sourceRoot":"","sources":["set-async-error.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { createFormControlState } from '../../state';\r\nimport { SetAsyncErrorAction } from '../../actions';\r\nimport { setAsyncErrorReducer } from './set-async-error';\r\n\r\ndescribe(`form control ${setAsyncErrorReducer.name}`, () => {\r\n  const FORM_CONTROL_ID = 'test ID';\r\n  const INITIAL_FORM_CONTROL_VALUE = '';\r\n  const INITIAL_STATE = createFormControlState<string>(FORM_CONTROL_ID, INITIAL_FORM_CONTROL_VALUE);\r\n\r\n  it('should skip any action of the wrong type', () => expect(setAsyncErrorReducer(INITIAL_STATE, { type: '' } as any)).toBe(INITIAL_STATE));\r\n\r\n  it('should update state with error', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.errors).toEqual({ ['$' + name]: value });\r\n    expect(resultState.isValid).toBe(false);\r\n    expect(resultState.isInvalid).toBe(true);\r\n  });\r\n\r\n  it('should remove the validation from pending validations if validation is the last pending', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should remove the validation from pending validations if validation is not the last pending', () => {\r\n    const name = 'required';\r\n    const name2 = 'min';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name, name2], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([name2]);\r\n    expect(resultState.isValidationPending).toBe(true);\r\n  });\r\n\r\n  it('should remove pending validation without changing the error if error value is the same', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, isValid: false, isInvalid: true, errors: { ['$' + name]: value }, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.errors['$' + name]).toBe(value);\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should remove pending validation without changing the error if error value is equal', () => {\r\n    const name = 'required';\r\n    const value = { field: true };\r\n    const state = { ...INITIAL_STATE, isValid: false, isInvalid: true, errors: { ['$' + name]: value }, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, { ...value }));\r\n    expect(resultState.errors['$' + name]).toBe(value);\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should not update state if control is disabled', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, isEnabled: false, isDisabled: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n\r\n  it('should not update state if no matching pending validation is found', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: ['min'], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n});\r\n"]}