{"version":3,"file":"reducer.js","sourceRoot":"","sources":["reducer.ts"],"names":[],"mappings":";;AAGA,kCAA+F;AAC/F,iEAAqE;AACrE,6CAAmD;AACnD,2CAAiD;AACjD,yCAA+C;AAC/C,yDAA6D;AAC7D,+DAAmE;AACnE,iEAAqE;AACrE,6DAAiE;AACjE,qEAAyE;AACzE,iEAAqE;AACrE,yCAA+C;AAC/C,6DAAiE;AACjE,mDAAwD;AACxD,iFAAoF;AACpF,iDAAsD;AACtD,2EAA+E;AAC/E,6CAAmD;AAEnD,oCACE,KAA+B,EAC/B,MAAuB;IAEvB,EAAE,CAAC,CAAC,oBAAY,CAAC,KAAK,CAAC,IAAI,oBAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/C,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,KAAK,GAAG,2BAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACvC,KAAK,GAAG,6BAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACxC,KAAK,GAAG,oDAA2B,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnD,KAAK,GAAG,sCAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,sBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrC,KAAK,GAAG,wBAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACtC,KAAK,GAAG,oBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,KAAK,GAAG,wBAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACtC,KAAK,GAAG,kCAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC1C,KAAK,GAAG,wCAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,KAAK,GAAG,sCAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,8CAAwB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAChD,KAAK,GAAG,yDAA6B,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrD,KAAK,GAAG,oBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAEpC,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AA/BD,gEA+BC;AAED;;GAEG;AACH,4BAAyE,KAA+B,EAAE,MAAc;IACtH,MAAM,CAAC,0BAA0B,CAAC,KAAK,EAAE,MAAa,CAAC,CAAC;AAC1D,CAAC;AAFD,gDAEC","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nimport { Actions } from '../actions';\r\nimport { FormControlState, FormControlValueTypes, isArrayState, isGroupState } from '../state';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { focusReducer } from './reducer/focus';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { unfocusReducer } from './reducer/unfocus';\r\n\r\nexport function formControlReducerInternal<TValue extends FormControlValueTypes>(\r\n  state: FormControlState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormControlState<TValue> {\r\n  if (isGroupState(state) || isArrayState(state)) {\r\n    throw new Error('State must be control state');\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return state;\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = focusReducer(state, action);\r\n  state = unfocusReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form control state with actions.\r\n */\r\nexport function formControlReducer<TValue extends FormControlValueTypes>(state: FormControlState<TValue>, action: Action) {\r\n  return formControlReducerInternal(state, action as any);\r\n}\r\n"]}