{"version":3,"file":"reducer.js","sourceRoot":"","sources":["reducer.ts"],"names":[],"mappings":";;AAEA,sCAOoB;AACpB,kCAAwD;AACxD,qDAA0D;AAC1D,iEAAqE;AACrE,6CAAmD;AACnD,2CAAiD;AACjD,yDAA6D;AAC7D,+DAAmE;AACnE,iEAAqE;AACrE,6DAAiE;AACjE,qEAAyE;AACzE,iEAAqE;AACrE,2DAAgE;AAChE,yCAA+C;AAC/C,6DAAiE;AACjE,mDAAwD;AACxD,iFAAoF;AACpF,iDAAsD;AACtD,2EAA+E;AAC/E,uCAA8C;AAE9C,kCAAiD,KAA6B,EAAE,MAAyB;IACvG,EAAE,CAAC,CAAC,CAAC,oBAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC/C,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,2BAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3C,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,qBAAW,CAAC,IAAI,CAAC;QACtB,KAAK,uBAAa,CAAC,IAAI,CAAC;QACxB,KAAK,+BAAqB,CAAC,IAAI,CAAC;QAChC,KAAK,kCAAwB,CAAC,IAAI;YAChC,MAAM,CAAC,mBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,GAAG,2BAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACvC,KAAK,GAAG,6BAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACxC,KAAK,GAAG,oDAA2B,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnD,KAAK,GAAG,sCAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,sBAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrC,KAAK,GAAG,wBAAc,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACtC,KAAK,GAAG,kCAAkB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC1C,KAAK,GAAG,wCAAqB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,KAAK,GAAG,sCAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,0CAAsB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC9C,KAAK,GAAG,8CAAwB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAChD,KAAK,GAAG,yDAA6B,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrD,KAAK,GAAG,oBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,KAAK,GAAG,+BAAiB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACzC,KAAK,GAAG,qCAAoB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAE5C,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAxCD,4DAwCC;AAED;;GAEG;AACH,0BAAyC,KAA6B,EAAE,MAAc;IACpF,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,MAAa,CAAC,CAAC;AACxD,CAAC;AAFD,4CAEC","sourcesContent":["import { Action } from '@ngrx/store';\r\n\r\nimport {\r\n  Actions,\r\n  AddGroupControlAction,\r\n  FocusAction,\r\n  isNgrxFormsAction,\r\n  RemoveGroupControlAction,\r\n  UnfocusAction,\r\n} from '../actions';\r\nimport { FormArrayState, isArrayState } from '../state';\r\nimport { addControlReducer } from './reducer/add-control';\r\nimport { clearAsyncErrorReducer } from './reducer/clear-async-error';\r\nimport { disableReducer } from './reducer/disable';\r\nimport { enableReducer } from './reducer/enable';\r\nimport { markAsDirtyReducer } from './reducer/mark-as-dirty';\r\nimport { markAsPristineReducer } from './reducer/mark-as-pristine';\r\nimport { markAsSubmittedReducer } from './reducer/mark-as-submitted';\r\nimport { markAsTouchedReducer } from './reducer/mark-as-touched';\r\nimport { markAsUnsubmittedReducer } from './reducer/mark-as-unsubmitted';\r\nimport { markAsUntouchedReducer } from './reducer/mark-as-untouched';\r\nimport { removeControlReducer } from './reducer/remove-control';\r\nimport { resetReducer } from './reducer/reset';\r\nimport { setAsyncErrorReducer } from './reducer/set-async-error';\r\nimport { setErrorsReducer } from './reducer/set-errors';\r\nimport { setUserDefinedPropertyReducer } from './reducer/set-user-defined-property';\r\nimport { setValueReducer } from './reducer/set-value';\r\nimport { startAsyncValidationReducer } from './reducer/start-async-validation';\r\nimport { childReducer } from './reducer/util';\r\n\r\nexport function formArrayReducerInternal<TValue>(state: FormArrayState<TValue>, action: Actions<TValue[]>) {\r\n  if (!isArrayState(state)) {\r\n    throw new Error('State must be array state');\r\n  }\r\n\r\n  if (!isNgrxFormsAction(action)) {\r\n    return state;\r\n  }\r\n\r\n  if (!action.controlId.startsWith(state.id)) {\r\n    return state;\r\n  }\r\n\r\n  switch (action.type) {\r\n    case FocusAction.TYPE:\r\n    case UnfocusAction.TYPE:\r\n    case AddGroupControlAction.TYPE:\r\n    case RemoveGroupControlAction.TYPE:\r\n      return childReducer(state, action);\r\n  }\r\n\r\n  state = setValueReducer(state, action);\r\n  state = setErrorsReducer(state, action);\r\n  state = startAsyncValidationReducer(state, action);\r\n  state = setAsyncErrorReducer(state, action);\r\n  state = clearAsyncErrorReducer(state, action);\r\n  state = enableReducer(state, action);\r\n  state = disableReducer(state, action);\r\n  state = markAsDirtyReducer(state, action);\r\n  state = markAsPristineReducer(state, action);\r\n  state = markAsTouchedReducer(state, action);\r\n  state = markAsUntouchedReducer(state, action);\r\n  state = markAsSubmittedReducer(state, action);\r\n  state = markAsUnsubmittedReducer(state, action);\r\n  state = setUserDefinedPropertyReducer(state, action);\r\n  state = resetReducer(state, action);\r\n  state = addControlReducer(state, action);\r\n  state = removeControlReducer(state, action);\r\n\r\n  return state;\r\n}\r\n\r\n/**\r\n * This reducer function updates a form array state with actions.\r\n */\r\nexport function formArrayReducer<TValue>(state: FormArrayState<TValue>, action: Action) {\r\n  return formArrayReducerInternal(state, action as any);\r\n}\r\n"]}