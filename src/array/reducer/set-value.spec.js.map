{"version":3,"file":"set-value.spec.js","sourceRoot":"","sources":["set-value.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { SetValueAction } from '../../actions';\r\nimport { setValueReducer } from './set-value';\r\nimport {\r\n  FORM_CONTROL_0_ID,\r\n  FORM_CONTROL_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_NESTED_ARRAY,\r\n  INITIAL_STATE_NESTED_GROUP,\r\n} from './test-util';\r\n\r\ndescribe(`form array ${setValueReducer.name}`, () => {\r\n  it('should update state value if different', () => {\r\n    const value = ['A', ''];\r\n    const resultState = setValueReducer(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n  });\r\n\r\n  it('should not update state value if same', () => {\r\n    const value = ['', ''];\r\n    const state = { ...INITIAL_STATE, value };\r\n    const resultState = setValueReducer(state, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n\r\n  it('should not mark state as dirty', () => {\r\n    const value = ['A', ''];\r\n    const resultState = setValueReducer(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.isDirty).toEqual(false);\r\n  });\r\n\r\n  it('should update child state value', () => {\r\n    const value = ['A', ''];\r\n    const resultState = setValueReducer(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.controls[0].value).toEqual(value[0]);\r\n  });\r\n\r\n  it('should create child states on demand', () => {\r\n    const value = ['', '', ''];\r\n    const resultState = setValueReducer<string>(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[2].value).toEqual(value[2]);\r\n  });\r\n\r\n  it('should create child states on demand for group children', () => {\r\n    const value = [{ inner: '' }, { inner: '' }, { inner: '' }];\r\n    const resultState = setValueReducer<typeof value[0]>(INITIAL_STATE_NESTED_GROUP, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[2].value).toEqual(value[2]);\r\n  });\r\n\r\n  it('should create child states on demand for array children', () => {\r\n    const value = [[''], [''], ['']];\r\n    const resultState = setValueReducer<typeof value[0]>(INITIAL_STATE_NESTED_ARRAY, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[2].value).toEqual(value[2]);\r\n  });\r\n\r\n  it('should create child states on demand for null children', () => {\r\n    const value = ['', '', null];\r\n    const resultState = setValueReducer<string | null>(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[2].value).toEqual(value[2]);\r\n  });\r\n\r\n  it('should remove child states on demand', () => {\r\n    const value = [''];\r\n    const resultState = setValueReducer<string>(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[1]).toBeUndefined();\r\n  });\r\n\r\n  it('should remove child states on demand when value is empty', () => {\r\n    const value: string[] = [];\r\n    const resultState = setValueReducer<string>(INITIAL_STATE, new SetValueAction(FORM_CONTROL_ID, value));\r\n    expect(resultState.value).toEqual(value);\r\n    expect(resultState.controls[0]).toBeUndefined();\r\n  });\r\n\r\n  it('should aggregate child values', () => {\r\n    const value = 'A';\r\n    const resultState = setValueReducer(INITIAL_STATE, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.value).toEqual([value, '']);\r\n  });\r\n\r\n  it('should not mark state as dirty if child value is updated', () => {\r\n    const value = 'A';\r\n    const resultState = setValueReducer(INITIAL_STATE, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n  });\r\n\r\n  it('should aggregate child values for group children', () => {\r\n    const value = { inner: 'A' };\r\n    const resultState = setValueReducer(INITIAL_STATE_NESTED_GROUP, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.value).toEqual([value, { inner: '' }]);\r\n  });\r\n\r\n  it('should not mark state as dirty if group child value is updated', () => {\r\n    const value = { inner: 'A' };\r\n    const resultState = setValueReducer(INITIAL_STATE_NESTED_GROUP, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n  });\r\n\r\n  it('should aggregate child values for array children', () => {\r\n    const value = ['A'];\r\n    const resultState = setValueReducer(INITIAL_STATE_NESTED_ARRAY, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.value).toEqual([value, ['']]);\r\n  });\r\n\r\n  it('should not mark state as dirty if array child value is updated', () => {\r\n    const value = ['A'];\r\n    const resultState = setValueReducer(INITIAL_STATE_NESTED_ARRAY, new SetValueAction(FORM_CONTROL_0_ID, value) as any);\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n  });\r\n\r\n  it('should remove child errors on demand when value is empty', () => {\r\n    const errors = { required: true };\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      errors: {\r\n        _0: errors,\r\n      },\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          errors,\r\n        },\r\n        INITIAL_STATE.controls[1],\r\n      ],\r\n    };\r\n    const resultState = setValueReducer<string>(state, new SetValueAction(FORM_CONTROL_ID, []));\r\n    expect(resultState.value).toEqual([]);\r\n    expect(resultState.errors).toEqual({});\r\n    expect(resultState.controls[0]).toBeUndefined();\r\n  });\r\n\r\n  it('should remove child errors and keep own errors on demand when value is empty', () => {\r\n    const errors = { required: true };\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      errors: {\r\n        _0: errors,\r\n        ...errors,\r\n      },\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          errors,\r\n        },\r\n        INITIAL_STATE.controls[1],\r\n      ],\r\n    };\r\n    const resultState = setValueReducer<string>(state, new SetValueAction(FORM_CONTROL_ID, []));\r\n    expect(resultState.value).toEqual([]);\r\n    expect(resultState.errors).toEqual(errors);\r\n    expect(resultState.controls[0]).toBeUndefined();\r\n  });\r\n});\r\n"]}