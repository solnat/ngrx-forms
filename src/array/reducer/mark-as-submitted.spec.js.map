{"version":3,"file":"mark-as-submitted.spec.js","sourceRoot":"","sources":["mark-as-submitted.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsSubmittedAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { markAsSubmittedReducer } from './mark-as-submitted';\r\nimport {\r\n  FORM_CONTROL_0_ID,\r\n  FORM_CONTROL_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_NESTED_ARRAY,\r\n  INITIAL_STATE_NESTED_GROUP,\r\n  setPropertiesRecursively,\r\n} from './test-util';\r\n\r\ndescribe(`form array ${markAsSubmittedReducer.name}`, () => {\r\n  const INITIAL_STATE_SUBMITTED = cast(setPropertiesRecursively(INITIAL_STATE, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n\r\n  it('should mark itself and all children recursively as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_SUBMITTED);\r\n  });\r\n\r\n  it('should not update state if all children are marked as submitted recursively', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_SUBMITTED, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE_SUBMITTED);\r\n  });\r\n\r\n  it('should mark children as submitted if the group itself is already marked as submitted', () => {\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      isSubmitted: true,\r\n      isUnsubmitted: false,\r\n      controls: [\r\n        INITIAL_STATE.controls[0],\r\n        {\r\n          ...INITIAL_STATE.controls[1],\r\n          isSubmitted: true,\r\n          isUnsubmitted: false,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = markAsSubmittedReducer(state, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_SUBMITTED);\r\n  });\r\n\r\n  it('should mark control children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isSubmitted).toEqual(true);\r\n    expect(resultState.controls[0].isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark group children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_NESTED_GROUP, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isSubmitted).toEqual(true);\r\n    expect(resultState.controls[0].isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark array children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_NESTED_ARRAY, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isSubmitted).toEqual(true);\r\n    expect(resultState.controls[0].isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if control child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE, new MarkAsSubmittedAction(FORM_CONTROL_0_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if group child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_NESTED_GROUP, new MarkAsSubmittedAction(FORM_CONTROL_0_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if array child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_NESTED_ARRAY, new MarkAsSubmittedAction(FORM_CONTROL_0_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n});\r\n"]}