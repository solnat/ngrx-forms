{"version":3,"file":"set-async-error.spec.js","sourceRoot":"","sources":["set-async-error.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { SetAsyncErrorAction } from '../../actions';\r\nimport { setAsyncErrorReducer } from './set-async-error';\r\nimport {\r\n  FORM_CONTROL_0_ID,\r\n  FORM_CONTROL_1_ID,\r\n  FORM_CONTROL_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_NESTED_ARRAY,\r\n  INITIAL_STATE_NESTED_GROUP,\r\n} from './test-util';\r\n\r\ndescribe(`form array ${setAsyncErrorReducer.name}`, () => {\r\n  it('should skip any action of the wrong type', () => expect(setAsyncErrorReducer(INITIAL_STATE, { type: '' } as any)).toBe(INITIAL_STATE));\r\n\r\n  it('should update state with error', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.errors).toEqual({ ['$' + name]: value });\r\n    expect(resultState.isValid).toBe(false);\r\n    expect(resultState.isInvalid).toBe(true);\r\n  });\r\n\r\n  it('should remove the validation from pending validations if validation is the last pending', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should remove the validation from pending validations if validation is not the last pending', () => {\r\n    const name = 'required';\r\n    const name2 = 'min';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: [name, name2], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([name2]);\r\n    expect(resultState.isValidationPending).toBe(true);\r\n  });\r\n\r\n  it('should remove pending validation without changing the error if error value is the same', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, isValid: false, isInvalid: true, errors: { ['$' + name]: value }, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.errors['$' + name]).toBe(value);\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should remove pending validation without changing the error if error value is equal', () => {\r\n    const name = 'required';\r\n    const value = { field: true };\r\n    const state = { ...INITIAL_STATE, isValid: false, isInvalid: true, errors: { ['$' + name]: value }, pendingValidations: [name], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, { ...value }));\r\n    expect(resultState.errors['$' + name]).toBe(value);\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toBe(false);\r\n  });\r\n\r\n  it('should not update state if control is disabled', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, isEnabled: false, isDisabled: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n\r\n  it('should not update state if no matching pending validation is found', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = { ...INITIAL_STATE, pendingValidations: ['min'], isValidationPending: true };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n\r\n  it('should aggregate child errors', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_0_ID, name, value));\r\n    expect(resultState.errors).toEqual({ _0: { ['$' + name]: value } });\r\n    expect(resultState.isValid).toEqual(false);\r\n    expect(resultState.isInvalid).toEqual(true);\r\n    expect(resultState.isValidationPending).toEqual(false);\r\n  });\r\n\r\n  it('should aggregate child errors for group children', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE_NESTED_GROUP,\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE_NESTED_GROUP.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_0_ID, name, value));\r\n    expect(resultState.errors).toEqual({ _0: { ['$' + name]: value } });\r\n    expect(resultState.isValid).toEqual(false);\r\n    expect(resultState.isInvalid).toEqual(true);\r\n    expect(resultState.isValidationPending).toEqual(false);\r\n  });\r\n\r\n  it('should aggregate child errors for array children', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE_NESTED_ARRAY,\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE_NESTED_ARRAY.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_0_ID, name, value));\r\n    expect(resultState.errors).toEqual({ _0: { ['$' + name]: value } });\r\n    expect(resultState.isValid).toEqual(false);\r\n    expect(resultState.isInvalid).toEqual(true);\r\n    expect(resultState.isValidationPending).toEqual(false);\r\n  });\r\n\r\n  it('should aggregate multiple child errors', () => {\r\n    const name1 = 'required';\r\n    const value1 = true;\r\n    const name2 = 'min';\r\n    const value2 = 0;\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          pendingValidations: [name1],\r\n          isValidationPending: true,\r\n        },\r\n        {\r\n          ...INITIAL_STATE.controls[1],\r\n          pendingValidations: [name2],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    let resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_0_ID, name1, value1));\r\n    resultState = setAsyncErrorReducer(resultState, new SetAsyncErrorAction(FORM_CONTROL_1_ID, name2, value2));\r\n    expect(resultState.errors).toEqual({ _0: { ['$' + name1]: value1 }, _1: { ['$' + name2]: value2 } });\r\n    expect(resultState.isValid).toEqual(false);\r\n    expect(resultState.isInvalid).toEqual(true);\r\n    expect(resultState.isValidationPending).toEqual(false);\r\n  });\r\n\r\n  it('should track child errors and own errors when own errors are changed', () => {\r\n    const name1 = 'required';\r\n    const value1 = true;\r\n    const name2 = 'min';\r\n    const value2 = 0;\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      errors: {\r\n        _0: { ['$' + name2]: value2 },\r\n      },\r\n      isValid: false,\r\n      isInvalid: true,\r\n      pendingValidations: [name1],\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          isValid: false,\r\n          isInvalid: true,\r\n          errors: { ['$' + name2]: value2 },\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name1, value1));\r\n    expect(resultState.errors).toEqual({ ['$' + name1]: value1, _0: { ['$' + name2]: value2 } });\r\n  });\r\n\r\n  it('should track own errors and child errors when child errors are changed', () => {\r\n    const name1 = 'required';\r\n    const value1 = true;\r\n    const name2 = 'min';\r\n    const value2 = 0;\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      isValid: false,\r\n      isInvalid: true,\r\n      errors: { ['$' + name1]: value1 },\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          pendingValidations: [name2],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_0_ID, name2, value2));\r\n    expect(resultState.errors).toEqual({ ['$' + name1]: value1, _0: { ['$' + name2]: value2 } });\r\n  });\r\n\r\n  it('should mark state as validation pending if child control is validation pending', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      pendingValidations: [name],\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as validation pending if child group is validation pending', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE_NESTED_GROUP,\r\n      pendingValidations: [name],\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE_NESTED_GROUP.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as validation pending if child array is validation pending', () => {\r\n    const name = 'required';\r\n    const value = true;\r\n    const state = {\r\n      ...INITIAL_STATE_NESTED_ARRAY,\r\n      pendingValidations: [name],\r\n      isValidationPending: true,\r\n      controls: [\r\n        {\r\n          ...INITIAL_STATE_NESTED_ARRAY.controls[0],\r\n          pendingValidations: [name],\r\n          isValidationPending: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = setAsyncErrorReducer(state, new SetAsyncErrorAction(FORM_CONTROL_ID, name, value));\r\n    expect(resultState.pendingValidations).toEqual([]);\r\n    expect(resultState.isValidationPending).toEqual(true);\r\n  });\r\n});\r\n"]}