{"version":3,"file":"set-value.js","sourceRoot":"","sources":["set-value.ts"],"names":[],"mappings":";;AAAA,yCAAwD;AACxD,qCAAkF;AAClF,+BAAwD;AAExD,yBACE,KAA6B,EAC7B,MAAyB;IAEzB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,wBAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,mBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC;QACzC,MAAM,IAAI,KAAK,CAAC,wEAAwE,CAAC,CAAC;IAC5F,CAAC;IAED,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;IAEnC,IAAM,QAAQ,GAAG,KAAK;SACnB,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;QACR,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvB,MAAM,CAAC,wBAAgB,CAAI,KAAK,CAAC,EAAE,SAAI,CAAG,EAAE,CAAC,CAAC,CAAC;QACjD,CAAC;QAED,MAAM,CAAC,uBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,wBAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1F,CAAC,CAAC,CAAC;IAEL,MAAM,CAAC,yBAAiB,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC3H,CAAC;AAhCD,0CAgCC","sourcesContent":["import { Actions, SetValueAction } from '../../actions';\r\nimport { computeArrayState, createChildState, FormArrayState } from '../../state';\r\nimport { callChildReducer, childReducer } from './util';\r\n\r\nexport function setValueReducer<TValue>(\r\n  state: FormArrayState<TValue>,\r\n  action: Actions<TValue[]>,\r\n): FormArrayState<TValue> {\r\n  if (action.type !== SetValueAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.value === action.payload.value) {\r\n    return state;\r\n  }\r\n\r\n  if (action.payload.value instanceof Date) {\r\n    throw new Error('Date values are not supported. Please used serialized strings instead.');\r\n  }\r\n\r\n  const value = action.payload.value;\r\n\r\n  const controls = value\r\n    .map((v, i) => {\r\n      if (!state.controls[i]) {\r\n        return createChildState(`${state.id}.${i}`, v);\r\n      }\r\n\r\n      return callChildReducer(state.controls[i], new SetValueAction(state.controls[i].id, v));\r\n    });\r\n\r\n  return computeArrayState(state.id, controls, value, state.errors, state.pendingValidations, state.userDefinedProperties);\r\n}\r\n"]}