{"version":3,"file":"mark-as-pristine.spec.js","sourceRoot":"","sources":["mark-as-pristine.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsPristineAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { markAsPristineReducer } from './mark-as-pristine';\r\nimport {\r\n  FORM_CONTROL_0_ID,\r\n  FORM_CONTROL_1_ID,\r\n  FORM_CONTROL_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_NESTED_ARRAY,\r\n  INITIAL_STATE_NESTED_GROUP,\r\n  setPropertiesRecursively,\r\n} from './test-util';\r\n\r\ndescribe(`form array ${markAsPristineReducer.name}`, () => {\r\n  it('should update state if dirty', () => {\r\n    const state = { ...INITIAL_STATE, isDirty: true, isPristine: false };\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_ID));\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should not update state if pristine', () => {\r\n    const resultState = markAsPristineReducer(INITIAL_STATE, new MarkAsPristineAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE);\r\n  });\r\n\r\n  it('should mark control children as pristine', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE, [['isDirty', true], ['isPristine', false]]));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should mark group children as pristine', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_NESTED_GROUP, [['isDirty', true], ['isPristine', false]]));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should mark array children as pristine', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_NESTED_ARRAY, [['isDirty', true], ['isPristine', false]]));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls[0].isDirty).toEqual(false);\r\n    expect(resultState.controls[0].isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as pristine if all children are pristine when control child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE, [['isDirty', true], ['isPristine', false]], FORM_CONTROL_0_ID));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_1_ID));\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should not mark state as pristine if not all children are pristine when control child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE, [['isDirty', true], ['isPristine', false]]));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_0_ID));\r\n    expect(resultState.isDirty).toEqual(true);\r\n    expect(resultState.isPristine).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as pristine if all children are pristine when group child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_NESTED_GROUP, [['isDirty', true], ['isPristine', false]], FORM_CONTROL_0_ID));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_1_ID));\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.isPristine).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as pristine if all children are pristine when array child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_NESTED_ARRAY, [['isDirty', true], ['isPristine', false]], FORM_CONTROL_0_ID));\r\n    const resultState = markAsPristineReducer(state, new MarkAsPristineAction(FORM_CONTROL_1_ID));\r\n    expect(resultState.isDirty).toEqual(false);\r\n    expect(resultState.isPristine).toEqual(true);\r\n  });\r\n});\r\n"]}