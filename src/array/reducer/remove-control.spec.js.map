{"version":3,"file":"remove-control.spec.js","sourceRoot":"","sources":["remove-control.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { RemoveArrayControlAction } from '../../actions';\r\nimport { cast, createFormArrayState } from '../../state';\r\nimport { removeControlReducer } from './remove-control';\r\nimport { FORM_CONTROL_ID } from './test-util';\r\n\r\ndescribe(`form group ${removeControlReducer.name}`, () => {\r\n  const INITIAL_FORM_ARRAY_VALUE = ['A', 'B'];\r\n  const INITIAL_FORM_ARRAY_VALUE_NESTED_GROUP = [{ inner: 'A' }, { inner: 'B' }];\r\n  const INITIAL_FORM_ARRAY_VALUE_NESTED_ARRAY = [['A'], ['B']];\r\n  const INITIAL_STATE = createFormArrayState(FORM_CONTROL_ID, INITIAL_FORM_ARRAY_VALUE);\r\n  const INITIAL_STATE_NESTED_GROUP = createFormArrayState(FORM_CONTROL_ID, INITIAL_FORM_ARRAY_VALUE_NESTED_GROUP);\r\n  const INITIAL_STATE_NESTED_ARRAY = createFormArrayState(FORM_CONTROL_ID, INITIAL_FORM_ARRAY_VALUE_NESTED_ARRAY);\r\n\r\n  it('should remove child state', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 0);\r\n    const resultState = removeControlReducer<string>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual([INITIAL_FORM_ARRAY_VALUE[1]]);\r\n    expect(resultState.controls[1]).toBeUndefined();\r\n    expect(resultState.controls[0].id).toEqual(FORM_CONTROL_ID + '.0');\r\n  });\r\n\r\n  it('should remove child state for group children', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 0);\r\n    const resultState = removeControlReducer<{ inner: string }>(INITIAL_STATE_NESTED_GROUP, action);\r\n    expect(resultState.value).toEqual([INITIAL_FORM_ARRAY_VALUE_NESTED_GROUP[1]]);\r\n    expect(resultState.controls[1]).toBeUndefined();\r\n    expect(resultState.controls[0].id).toEqual(FORM_CONTROL_ID + '.0');\r\n  });\r\n\r\n  it('should remove child state for array children', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 0);\r\n    const resultState = removeControlReducer<string[]>(INITIAL_STATE_NESTED_ARRAY, action);\r\n    expect(resultState.value).toEqual([INITIAL_FORM_ARRAY_VALUE_NESTED_ARRAY[1]]);\r\n    expect(resultState.controls[1]).toBeUndefined();\r\n    expect(resultState.controls[0].id).toEqual(FORM_CONTROL_ID + '.0');\r\n  });\r\n\r\n  it('should update nested child IDs for group children', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 0);\r\n    const resultState = removeControlReducer<{ inner: string }>(INITIAL_STATE_NESTED_GROUP, action);\r\n    expect(cast(resultState.controls[0]).controls.inner.id).toEqual(FORM_CONTROL_ID + '.0.inner');\r\n  });\r\n\r\n  it('should update nested child IDs for array children', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 0);\r\n    const resultState = removeControlReducer<string[]>(INITIAL_STATE_NESTED_ARRAY, action);\r\n    expect(cast(resultState.controls[0]).controls[0].id).toEqual(FORM_CONTROL_ID + '.0.0');\r\n  });\r\n\r\n  it('should remove last element', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 1);\r\n    const resultState = removeControlReducer<string>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual([INITIAL_FORM_ARRAY_VALUE[0]]);\r\n    expect(resultState.controls[1]).toBeUndefined();\r\n    expect(resultState.controls[0].id).toEqual(FORM_CONTROL_ID + '.0');\r\n  });\r\n\r\n  it('should remove child errors for removed child', () => {\r\n    const id = 'ID';\r\n    const errors = { required: true };\r\n    let state = createFormArrayState<number>(id, [5]);\r\n    state = {\r\n      ...state,\r\n      errors: {\r\n        _0: errors,\r\n      },\r\n      controls: [\r\n        {\r\n          ...state.controls[0],\r\n          errors,\r\n        },\r\n      ],\r\n    };\r\n    const action = new RemoveArrayControlAction(id, 0);\r\n    const resultState = removeControlReducer<number>(state, action);\r\n    expect(resultState.value).toEqual([]);\r\n    expect(resultState.errors).toEqual({});\r\n    expect(resultState.controls[0]).toBeUndefined();\r\n  });\r\n\r\n  it('should remove child errors for removed child and keep own errors', () => {\r\n    const id = 'ID';\r\n    const errors = { required: true };\r\n    let state = createFormArrayState<number>(id, [5]);\r\n    state = {\r\n      ...state,\r\n      errors: {\r\n        _0: errors,\r\n        ...errors,\r\n      },\r\n      controls: [\r\n        {\r\n          ...state.controls[0],\r\n          errors,\r\n        },\r\n      ],\r\n    };\r\n    const action = new RemoveArrayControlAction(id, 0);\r\n    const resultState = removeControlReducer<number>(state, action);\r\n    expect(resultState.value).toEqual([]);\r\n    expect(resultState.errors).toEqual(errors);\r\n    expect(resultState.controls[0]).toBeUndefined();\r\n  });\r\n\r\n  it('should throw if trying to remove non-existing control', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, 2);\r\n    expect(() => removeControlReducer<string>(INITIAL_STATE, action)).toThrowError();\r\n  });\r\n\r\n  it('should throw if trying to remove control at negative index', () => {\r\n    const action = new RemoveArrayControlAction(FORM_CONTROL_ID, -1);\r\n    expect(() => removeControlReducer<string>(INITIAL_STATE, action)).toThrowError();\r\n  });\r\n});\r\n"]}