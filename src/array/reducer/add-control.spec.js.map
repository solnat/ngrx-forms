{"version":3,"file":"add-control.spec.js","sourceRoot":"","sources":["add-control.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { AddArrayControlAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { addControlReducer } from './add-control';\r\nimport { FORM_CONTROL_ID, INITIAL_STATE, INITIAL_STATE_NESTED_ARRAY, INITIAL_STATE_NESTED_GROUP } from './test-util';\r\n\r\ndescribe(`form array ${addControlReducer.name}`, () => {\r\n  it('should create child state for control child', () => {\r\n    const value = 'B';\r\n    const action = new AddArrayControlAction<string>(FORM_CONTROL_ID, value);\r\n    const resultState = addControlReducer<string>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual([...INITIAL_STATE.value, value]);\r\n    expect(resultState.controls[2].value).toEqual(value);\r\n  });\r\n\r\n  it('should create child state for group child', () => {\r\n    const value = { inner: 'D' };\r\n    const action = new AddArrayControlAction<{ inner: string }>(FORM_CONTROL_ID, value);\r\n    const resultState = addControlReducer<{ inner: string }>(INITIAL_STATE_NESTED_GROUP, action);\r\n    expect(resultState.value).toEqual([...INITIAL_STATE_NESTED_GROUP.value, value]);\r\n    expect(resultState.controls[2].value).toBe(value);\r\n    expect(cast(resultState.controls[2])!.controls).toBeDefined();\r\n    expect(Array.isArray(cast(resultState.controls[2])!.controls)).toBe(false);\r\n  });\r\n\r\n  it('should create child state for array child', () => {\r\n    const value = ['A'];\r\n    const action = new AddArrayControlAction<string[]>(FORM_CONTROL_ID, value);\r\n    const resultState = addControlReducer<string[]>(INITIAL_STATE_NESTED_ARRAY, action);\r\n    expect(resultState.value).toEqual([...INITIAL_STATE_NESTED_ARRAY.value, value]);\r\n    expect(resultState.controls[2].value).toEqual(value);\r\n    expect(cast(resultState.controls[2])!.controls).toBeDefined();\r\n    expect(Array.isArray(cast(resultState.controls[2])!.controls)).toBe(true);\r\n  });\r\n\r\n  it('should create child state at the given index', () => {\r\n    const value = 'B';\r\n    const action = new AddArrayControlAction<string>(FORM_CONTROL_ID, value, 1);\r\n    const resultState = addControlReducer<string>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual(['', value, '']);\r\n    expect(resultState.controls[1].value).toEqual(value);\r\n    expect(resultState.controls[1].id).toEqual(FORM_CONTROL_ID + '.1');\r\n    expect(resultState.controls[2].value).toEqual('');\r\n    expect(resultState.controls[2].id).toEqual(FORM_CONTROL_ID + '.2');\r\n  });\r\n\r\n  it('should create child state at the start', () => {\r\n    const value = 'B';\r\n    const action = new AddArrayControlAction<string>(FORM_CONTROL_ID, value, 0);\r\n    const resultState = addControlReducer<string>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual([value, '', '']);\r\n    expect(resultState.controls[0].value).toEqual(value);\r\n    expect(resultState.controls[0].id).toEqual(FORM_CONTROL_ID + '.0');\r\n    expect(resultState.controls[2].value).toEqual('');\r\n    expect(resultState.controls[2].id).toEqual(FORM_CONTROL_ID + '.2');\r\n  });\r\n\r\n  it('should throw if trying to add control at out of bounds index', () => {\r\n    const action = new AddArrayControlAction<string>(FORM_CONTROL_ID, '', 3);\r\n    expect(() => addControlReducer<string>(INITIAL_STATE, action)).toThrowError();\r\n  });\r\n\r\n  it('should throw if trying to add control at negative index', () => {\r\n    const action = new AddArrayControlAction<string>(FORM_CONTROL_ID, '', -1);\r\n    expect(() => addControlReducer<string>(INITIAL_STATE, action)).toThrowError();\r\n  });\r\n});\r\n"]}