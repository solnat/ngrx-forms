{"version":3,"file":"select-multiple.spec.js","sourceRoot":"","sources":["select-multiple.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, getDebugNode, Renderer2 } from '@angular/core';\r\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { NgrxSelectMultipleOption, NgrxSelectMultipleViewAdapter } from './select-multiple';\r\n\r\nconst TEST_ID = 'test ID';\r\n\r\nconst OPTION1_VALUE = 'op1';\r\nconst OPTION2_VALUE = 'op2';\r\nconst OPTION3_VALUE = 'op3';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'select-test',\r\n  template: `\r\n<select multiple [ngrxFormControlState]=\"state\">\r\n  <option value=\"op1\">op1</option>\r\n  <option value=\"op2\" selected>op2</option>\r\n  <option value=\"op3\" selected>op2</option>\r\n</select>\r\n\r\n<select multiple [ngrxFormControlState]=\"state\">\r\n  <option *ngFor=\"let o of stringOptions; trackBy: trackByIndex\" [value]=\"o\">{{o}}</option>\r\n</select>\r\n\r\n<select multiple [ngrxFormControlState]=\"state\">\r\n  <option *ngFor=\"let o of numberOptions; trackBy: trackByIndex\" [value]=\"o\">{{o}}</option>\r\n</select>\r\n\r\n<select multiple [ngrxFormControlState]=\"state\">\r\n  <option *ngFor=\"let o of booleanOptions; trackBy: trackByIndex\" [value]=\"o\">{{o}}</option>\r\n</select>\r\n`,\r\n})\r\nexport class SelectTestComponent {\r\n  stringOptions = ['op1', 'op2', 'op3'];\r\n  numberOptions = [1, 2, 3];\r\n  booleanOptions = [true, false];\r\n  state = { id: TEST_ID } as any;\r\n  trackByIndex = (index: number) => index;\r\n}\r\n\r\ndescribe(NgrxSelectMultipleViewAdapter.name, () => {\r\n  let component: SelectTestComponent;\r\n  let fixture: ComponentFixture<SelectTestComponent>;\r\n  let viewAdapter: NgrxSelectMultipleViewAdapter;\r\n  let element: HTMLSelectElement;\r\n  let option1: HTMLOptionElement;\r\n  let option2: HTMLOptionElement;\r\n  let option3: HTMLOptionElement;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [\r\n        NgrxSelectMultipleViewAdapter,\r\n        NgrxSelectMultipleOption,\r\n        SelectTestComponent,\r\n      ],\r\n    }).compileComponents();\r\n  }));\r\n\r\n  describe('static options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SelectTestComponent);\r\n      component = fixture.componentInstance;\r\n      const nativeElement = fixture.nativeElement as HTMLElement;\r\n      element = nativeElement.querySelector('select') as HTMLSelectElement;\r\n      option1 = element.querySelectorAll('option')[0] as HTMLOptionElement;\r\n      option2 = element.querySelectorAll('option')[1] as HTMLOptionElement;\r\n      option3 = element.querySelectorAll('option')[2] as HTMLOptionElement;\r\n      viewAdapter = getDebugNode(element)!.injector.get(NgrxSelectMultipleViewAdapter);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should attach the view adapter', () => expect(viewAdapter).toBeDefined());\r\n\r\n    it('should mark a single option as selected if same value is written', () => {\r\n      viewAdapter.setViewValue([OPTION1_VALUE]);\r\n      expect(option1.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark multiple options as selected if same values are written', () => {\r\n      viewAdapter.setViewValue([OPTION1_VALUE, OPTION2_VALUE]);\r\n      expect(option1.selected).toBe(true);\r\n      expect(option2.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark options as unselected if different value is written', () => {\r\n      viewAdapter.setViewValue([OPTION1_VALUE, OPTION3_VALUE]);\r\n      expect(option2.selected).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      option1.selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([OPTION1_VALUE, OPTION2_VALUE, OPTION3_VALUE]);\r\n      option2.selected = false;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([OPTION1_VALUE, OPTION3_VALUE]);\r\n    });\r\n\r\n    it('should call the registered function whenever the input is blurred', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnTouchedCallback(spy);\r\n      element.dispatchEvent(new Event('blur'));\r\n      expect(spy).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should disable the input', () => {\r\n      viewAdapter.setIsDisabled(true);\r\n      expect(element.disabled).toBe(true);\r\n    });\r\n\r\n    it('should enable the input', () => {\r\n      element.disabled = true;\r\n      viewAdapter.setIsDisabled(false);\r\n      expect(element.disabled).toBe(false);\r\n    });\r\n\r\n    it('should throw if state is undefined', () => {\r\n      expect(() => viewAdapter.ngrxFormControlState = undefined as any).toThrowError();\r\n    });\r\n  });\r\n\r\n  describe('dynamic string options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SelectTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      const nativeElement = fixture.nativeElement as HTMLElement;\r\n      element = nativeElement.querySelectorAll('select')[1] as HTMLSelectElement;\r\n      option1 = element.querySelectorAll('option')[0] as HTMLOptionElement;\r\n      option2 = element.querySelectorAll('option')[1] as HTMLOptionElement;\r\n      option3 = element.querySelectorAll('option')[2] as HTMLOptionElement;\r\n      viewAdapter = getDebugNode(element)!.injector.get(NgrxSelectMultipleViewAdapter);\r\n      viewAdapter.setViewValue([component.stringOptions[1], component.stringOptions[2]]);\r\n    });\r\n\r\n    it('should set the ID of the element to the ID of the state', () => {\r\n      expect(element.id).toBe(TEST_ID);\r\n    });\r\n\r\n    it('should set the ID of the element if the ID of the state changes', () => {\r\n      const newId = 'new ID';\r\n      viewAdapter.ngrxFormControlState = { id: newId } as any;\r\n      fixture.detectChanges();\r\n      expect(element.id).toBe(newId);\r\n    });\r\n\r\n    it('should mark a single option as selected if same value is written', () => {\r\n      viewAdapter.setViewValue([component.stringOptions[0]]);\r\n      expect(option1.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark multiple options as selected if same values are written', () => {\r\n      viewAdapter.setViewValue([component.stringOptions[0], component.stringOptions[1]]);\r\n      expect(option1.selected).toBe(true);\r\n      expect(option2.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark an option as unselected if different value is written', () => {\r\n      viewAdapter.setViewValue([component.stringOptions[0], component.stringOptions[2]]);\r\n      expect(option2.selected).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      option1.selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.stringOptions);\r\n      option2.selected = false;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.stringOptions[0], component.stringOptions[2]]);\r\n    });\r\n\r\n    it('should call the registered function whenever a selected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = 'new value';\r\n      component.stringOptions[1] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith([component.stringOptions[1], component.stringOptions[2]]);\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = 'op4';\r\n      component.stringOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      (element.querySelectorAll('option')[3] as HTMLOptionElement).selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.stringOptions[1], component.stringOptions[2], component.stringOptions[3]]);\r\n    });\r\n\r\n    it('should remove options dynamically', () => {\r\n      const oldValue = [...component.stringOptions];\r\n      component.stringOptions.pop();\r\n      fixture.detectChanges();\r\n      expect(() => viewAdapter.setViewValue(oldValue)).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('dynamic number options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SelectTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      const nativeElement = fixture.nativeElement as HTMLElement;\r\n      element = nativeElement.querySelectorAll('select')[2] as HTMLSelectElement;\r\n      option1 = element.querySelectorAll('option')[0] as HTMLOptionElement;\r\n      option2 = element.querySelectorAll('option')[1] as HTMLOptionElement;\r\n      option3 = element.querySelectorAll('option')[2] as HTMLOptionElement;\r\n      viewAdapter = getDebugNode(element)!.injector.get(NgrxSelectMultipleViewAdapter);\r\n      viewAdapter.setViewValue([component.numberOptions[1], component.numberOptions[2]]);\r\n    });\r\n\r\n    it('should mark a single option as selected if same value is written', () => {\r\n      viewAdapter.setViewValue([component.numberOptions[0]]);\r\n      expect(option1.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark multiple options as selected if same values are written', () => {\r\n      viewAdapter.setViewValue([component.numberOptions[0], component.numberOptions[1]]);\r\n      expect(option1.selected).toBe(true);\r\n      expect(option2.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark an option as unselected if different value is written', () => {\r\n      viewAdapter.setViewValue([component.numberOptions[0], component.numberOptions[2]]);\r\n      expect(option2.selected).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      option1.selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.numberOptions);\r\n      option2.selected = false;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.numberOptions[0], component.numberOptions[2]]);\r\n    });\r\n\r\n    it('should call the registered function whenever a selected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = 3;\r\n      component.numberOptions[1] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith([component.numberOptions[1], component.numberOptions[2]]);\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = 4;\r\n      component.numberOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      (element.querySelectorAll('option')[3] as HTMLOptionElement).selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.numberOptions[1], component.numberOptions[2], component.numberOptions[3]]);\r\n    });\r\n\r\n    it('should remove options dynamically', () => {\r\n      const oldValue = [...component.numberOptions];\r\n      component.numberOptions.pop();\r\n      fixture.detectChanges();\r\n      expect(() => viewAdapter.setViewValue(oldValue)).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('dynamic boolean options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SelectTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      const nativeElement = fixture.nativeElement as HTMLElement;\r\n      element = nativeElement.querySelectorAll('select')[3] as HTMLSelectElement;\r\n      option1 = element.querySelectorAll('option')[0] as HTMLOptionElement;\r\n      option2 = element.querySelectorAll('option')[1] as HTMLOptionElement;\r\n      viewAdapter = getDebugNode(element)!.injector.get(NgrxSelectMultipleViewAdapter);\r\n      viewAdapter.setViewValue([component.booleanOptions[1]]);\r\n    });\r\n\r\n    it('should mark a single option as selected if same value is written', () => {\r\n      viewAdapter.setViewValue([component.booleanOptions[0]]);\r\n      expect(option1.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark multiple options as selected if same values are written', () => {\r\n      viewAdapter.setViewValue([component.booleanOptions[0], component.booleanOptions[1]]);\r\n      expect(option1.selected).toBe(true);\r\n      expect(option2.selected).toBe(true);\r\n    });\r\n\r\n    it('should mark an option as unselected if different value is written', () => {\r\n      viewAdapter.setViewValue([component.booleanOptions[0]]);\r\n      expect(option2.selected).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      option1.selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.booleanOptions);\r\n      option2.selected = false;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.booleanOptions[0]]);\r\n    });\r\n\r\n    it('should call the registered function whenever a selected option\\'s value changes', () => {\r\n      component.booleanOptions = [true];\r\n      fixture.detectChanges();\r\n      viewAdapter.setViewValue(component.booleanOptions);\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = false;\r\n      component.booleanOptions[0] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith(component.booleanOptions);\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      component.booleanOptions = [true];\r\n      fixture.detectChanges();\r\n      viewAdapter.setViewValue(component.booleanOptions);\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter.setOnChangeCallback(spy);\r\n      const newValue = false;\r\n      component.booleanOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      (element.querySelectorAll('option')[1] as HTMLOptionElement).selected = true;\r\n      element.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith([component.booleanOptions[0], component.booleanOptions[1]]);\r\n    });\r\n\r\n    it('should remove options dynamically', () => {\r\n      viewAdapter.setViewValue(component.booleanOptions);\r\n      const oldValue = [...component.booleanOptions];\r\n      component.booleanOptions.pop();\r\n      fixture.detectChanges();\r\n      expect(() => viewAdapter.setViewValue(oldValue)).not.toThrow();\r\n    });\r\n  });\r\n});\r\n\r\ndescribe(NgrxSelectMultipleOption.name, () => {\r\n  let viewAdapter: NgrxSelectMultipleViewAdapter;\r\n  let option: NgrxSelectMultipleOption;\r\n  let renderer: Renderer2;\r\n\r\n  beforeEach(() => {\r\n    renderer = jasmine.createSpyObj('renderer2', ['setProperty']);\r\n    viewAdapter = new NgrxSelectMultipleViewAdapter(renderer, {} as any);\r\n    option = new NgrxSelectMultipleOption({} as any, renderer, viewAdapter);\r\n  });\r\n\r\n  it('should work if option is created without view adapter', () => {\r\n    expect(new NgrxSelectMultipleOption({} as any, {} as any, null as any)).toBeDefined();\r\n  });\r\n\r\n  it('should set the value to the id of the element', () => {\r\n    option.ngOnInit();\r\n    expect(renderer.setProperty).not.toHaveBeenCalledWith(0);\r\n  });\r\n\r\n  it('should not set the value to the id if no view adapter is provided', () => {\r\n    option = new NgrxSelectMultipleOption({} as any, renderer, null as any);\r\n    option.ngOnInit();\r\n    expect(renderer.setProperty).not.toHaveBeenCalled();\r\n  });\r\n});\r\n"]}