{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":";;AAAA,uCAAqD;AACrD,qCAAmD;AACnD,mCAAiD;AACjD,iCAA+C;AAC/C,iCAA+C;AAC/C,mCAAiD;AACjD,qDAAkE;AAGlE,IAAM,gBAAgB,GAAG;IACvB,kCAAuB;IACvB,4BAAoB;IACpB,8BAAqB;IACrB,8BAAqB;IACrB,+CAA6B;IAC7B,4BAAoB;CACrB,CAAC;AAEF,8BAAqC,WAA4B;IAC/D,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,WAAW,CAAC,WAAW,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;AACnE,CAAC;AAFD,oDAEC;AAED,2BAAkC,YAA+B;IAC/D,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAC9C,CAAC;IAED,IAAI,cAA2C,CAAC;IAChD,IAAI,cAA2C,CAAC;IAChD,IAAI,aAA0C,CAAC;IAC/C,YAAY,CAAC,OAAO,CAAC,UAAC,CAAkB;QACtC,EAAE,CAAC,CAAC,CAAC,CAAC,WAAW,KAAK,gCAAsB,CAAC,CAAC,CAAC;YAC7C,cAAc,GAAG,CAAC,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACnB,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;YAClE,CAAC;YAED,cAAc,GAAG,CAAC,CAAC;QACrB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBAClB,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;YAChE,CAAC;YAED,aAAa,GAAG,CAAC,CAAC;QACpB,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAED,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAED,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IAED,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;AAC5C,CAAC;AAvCD,8CAuCC","sourcesContent":["import { NgrxCheckboxViewAdapter } from './checkbox';\r\nimport { NgrxDefaultViewAdapter } from './default';\r\nimport { NgrxNumberViewAdapter } from './number';\r\nimport { NgrxRadioViewAdapter } from './radio';\r\nimport { NgrxRangeViewAdapter } from './range';\r\nimport { NgrxSelectViewAdapter } from './select';\r\nimport { NgrxSelectMultipleViewAdapter } from './select-multiple';\r\nimport { FormViewAdapter } from './view-adapter';\r\n\r\nconst BUILTIN_ADAPTERS = [\r\n  NgrxCheckboxViewAdapter,\r\n  NgrxRangeViewAdapter,\r\n  NgrxNumberViewAdapter,\r\n  NgrxSelectViewAdapter,\r\n  NgrxSelectMultipleViewAdapter,\r\n  NgrxRadioViewAdapter,\r\n];\r\n\r\nexport function isBuiltInViewAdapter(viewAdapter: FormViewAdapter): boolean {\r\n  return BUILTIN_ADAPTERS.some(a => viewAdapter.constructor === a);\r\n}\r\n\r\nexport function selectViewAdapter(viewAdapters: FormViewAdapter[]): FormViewAdapter {\r\n  if (!viewAdapters) {\r\n    throw new Error('No view adapter matches!');\r\n  }\r\n\r\n  let defaultAdapter: FormViewAdapter | undefined;\r\n  let builtinAdapter: FormViewAdapter | undefined;\r\n  let customAdapter: FormViewAdapter | undefined;\r\n  viewAdapters.forEach((v: FormViewAdapter) => {\r\n    if (v.constructor === NgrxDefaultViewAdapter) {\r\n      defaultAdapter = v;\r\n    } else if (isBuiltInViewAdapter(v)) {\r\n      if (builtinAdapter) {\r\n        throw new Error('More than one built-in view adapter matches!');\r\n      }\r\n\r\n      builtinAdapter = v;\r\n    } else {\r\n      if (customAdapter) {\r\n        throw new Error('More than one custom view adapter matches!');\r\n      }\r\n\r\n      customAdapter = v;\r\n    }\r\n  });\r\n\r\n  if (customAdapter) {\r\n    return customAdapter;\r\n  }\r\n\r\n  if (builtinAdapter) {\r\n    return builtinAdapter;\r\n  }\r\n\r\n  if (defaultAdapter) {\r\n    return defaultAdapter;\r\n  }\r\n\r\n  throw new Error('No valid view adapter!');\r\n}\r\n"]}