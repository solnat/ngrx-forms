{"version":3,"file":"select-multiple.js","sourceRoot":"","sources":["select-multiple.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n} from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  selector: 'select[multiple][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxSelectMultipleViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxSelectMultipleViewAdapter implements FormViewAdapter {\r\n  private options: { [id: string]: NgrxSelectMultipleOption } = {};\r\n  private optionValues: { [id: string]: any } = {};\r\n  private idCounter = 0;\r\n  private selectedIds: string[] = [];\r\n\r\n  onChangeFn: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    if (value.id !== this.elementRef.nativeElement.id) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  setViewValue(value: any) {\r\n    if (value === null) {\r\n      value = [];\r\n    }\r\n\r\n    if (!Array.isArray(value)) {\r\n      throw new Error(`the value provided to a NgrxSelectMultipleViewAdapter must be null or an array; got ${value} of type ${typeof value}`); // `\r\n    }\r\n\r\n    this.selectedIds = value.map(v => this.getOptionId(v)).filter(id => id !== null).map(id => id as string);\r\n    Object.keys(this.options).forEach(id => this.options[id].isSelected = this.selectedIds.indexOf(id) >= 0);\r\n  }\r\n\r\n  @HostListener('change')\r\n  onChange() {\r\n    this.selectedIds = Object.keys(this.options).filter(id => this.options[id].isSelected);\r\n    const value = this.selectedIds.map(id => this.optionValues[id]);\r\n    this.onChangeFn(value);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void) {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void) {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean) {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  registerOption(option: NgrxSelectMultipleOption) {\r\n    const id = this.idCounter.toString();\r\n    this.options[id] = option;\r\n    this.idCounter += 1;\r\n    return id;\r\n  }\r\n\r\n  updateOptionValue(id: string, value: any) {\r\n    this.optionValues[id] = value;\r\n\r\n    if (this.selectedIds.indexOf(id) >= 0) {\r\n      this.onChange();\r\n    }\r\n  }\r\n\r\n  deregisterOption(id: string) {\r\n    delete this.options[id];\r\n    delete this.optionValues[id];\r\n  }\r\n\r\n  private getOptionId(value: any) {\r\n    for (const id of Array.from(Object.keys(this.optionValues))) {\r\n      if (this.optionValues[id] === value) {\r\n        return id;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nconst NULL_VIEW_ADAPTER: NgrxSelectMultipleViewAdapter = {\r\n  registerOption: () => '',\r\n  deregisterOption: () => void 0,\r\n  updateOptionValue: () => void 0,\r\n} as any;\r\n\r\nconst NULL_RENDERER: Renderer2 = {\r\n  setProperty: () => void 0,\r\n} as any;\r\n\r\n@Directive({\r\n  // tslint:disable-next-line:directive-selector\r\n  selector: 'option',\r\n})\r\nexport class NgrxSelectMultipleOption implements OnInit, OnDestroy {\r\n  id: string;\r\n\r\n  constructor(\r\n    private element: ElementRef,\r\n    private renderer: Renderer2,\r\n    @Host() @Optional() private viewAdapter: NgrxSelectMultipleViewAdapter,\r\n  ) {\r\n    this.renderer = viewAdapter ? renderer : NULL_RENDERER;\r\n    this.viewAdapter = viewAdapter || NULL_VIEW_ADAPTER;\r\n    this.id = this.viewAdapter.registerOption(this);\r\n  }\r\n\r\n  @Input('value')\r\n  set value(value: any) {\r\n    this.viewAdapter.updateOptionValue(this.id, value);\r\n  }\r\n\r\n  set isSelected(selected: boolean) {\r\n    this.renderer.setProperty(this.element.nativeElement, 'selected', selected);\r\n  }\r\n\r\n  get isSelected() {\r\n    return (this.element.nativeElement as HTMLOptionElement).selected;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.renderer.setProperty(this.element.nativeElement, 'value', this.id);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.viewAdapter.deregisterOption(this.id);\r\n  }\r\n}\r\n"]}