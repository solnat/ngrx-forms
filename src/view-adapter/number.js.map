{"version":3,"file":"number.js","sourceRoot":"","sources":["number.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAkG;AAGlG,+CAAyE;AAEzE,wCAAwC;AAUxC,IAAa,qBAAqB;IAgBhC,+BAAoB,QAAmB,EAAU,UAAsB;QAAnD,aAAQ,GAAR,QAAQ,CAAW;QAAU,eAAU,GAAV,UAAU,CAAY;QAfvE,aAAQ,GAAyB,cAAM,OAAA,KAAK,CAAC,EAAN,CAAM,CAAC;QAG9C,cAAS,GAAe,cAAM,OAAA,KAAK,CAAC,EAAN,CAAM,CAAA;IAYuC,CAAC;IAVnE,sBAAI,uDAAoB;aAAxB,UAAyB,KAA4B;YAC5D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;YAC9D,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;gBAClD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3E,CAAC;QACH,CAAC;;;OAAA;IAID,4CAAY,GAAZ,UAAa,KAAU;QACrB,oFAAoF;QACpF,IAAM,eAAe,GAAG,KAAK,KAAK,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC;IACrF,CAAC;IAED,mDAAmB,GAAnB,UAAoB,EAAwB;QAC1C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,oDAAoB,GAApB,UAAqB,EAAc;QACjC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,6CAAa,GAAb,UAAc,UAAmB;QAC/B,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IACnF,CAAC;IAID,2CAAW,GAAX,UAAY,KAAc;QACxB,IAAM,KAAK,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QACvD,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;IACH,4BAAC;AAAD,CAAC,AA1CD,IA0CC;AAtCC;IADC,mBAAY,CAAC,MAAM,CAAC;;wDACe;AAE3B;IAAR,YAAK,EAAE;;;iEAQP;AAwBD;IAFC,mBAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;IAClC,mBAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACf,OAAO;;wDAGzB;AAzCU,qBAAqB;IARjC,gBAAS,CAAC;QACT,QAAQ,EAAE,0CAA0C;QACpD,SAAS,EAAE,CAAC;gBACV,OAAO,EAAE,qCAAsB;gBAC/B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,uBAAqB,EAArB,CAAqB,CAAC;gBACpD,KAAK,EAAE,IAAI;aACZ,CAAC;KACH,CAAC;qCAiB8B,gBAAS,EAAsB,iBAAU;GAhB5D,qBAAqB,CA0CjC;AA1CY,sDAAqB","sourcesContent":["import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from '@angular/core';\r\n\r\nimport { FormControlState } from '../state';\r\nimport { FormViewAdapter, NGRX_FORM_VIEW_ADAPTER } from './view-adapter';\r\n\r\n// tslint:disable:directive-class-suffix\r\n\r\n@Directive({\r\n  selector: 'input[type=number][ngrxFormControlState]',\r\n  providers: [{\r\n    provide: NGRX_FORM_VIEW_ADAPTER,\r\n    useExisting: forwardRef(() => NgrxNumberViewAdapter),\r\n    multi: true,\r\n  }],\r\n})\r\nexport class NgrxNumberViewAdapter implements FormViewAdapter {\r\n  onChange: (value: any) => void = () => void 0;\r\n\r\n  @HostListener('blur')\r\n  onTouched: () => void = () => void 0\r\n\r\n  @Input() set ngrxFormControlState(value: FormControlState<any>) {\r\n    if (!value) {\r\n      throw new Error('The control state must not be undefined!');\r\n    }\r\n\r\n    if (value.id !== this.elementRef.nativeElement.id) {\r\n      this.renderer.setProperty(this.elementRef.nativeElement, 'id', value.id);\r\n    }\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) { }\r\n\r\n  setViewValue(value: any): void {\r\n    // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\r\n    const normalizedValue = value === null ? '' : value;\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'value', normalizedValue);\r\n  }\r\n\r\n  setOnChangeCallback(fn: (value: any) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  setOnTouchedCallback(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setIsDisabled(isDisabled: boolean): void {\r\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\r\n  }\r\n\r\n  @HostListener('change', ['$event'])\r\n  @HostListener('input', ['$event'])\r\n  handleInput(event: UIEvent): void {\r\n    const value = (event.target as HTMLInputElement).value;\r\n    this.onChange(value === '' ? null : parseFloat(value));\r\n  }\r\n}\r\n"]}