{"version":3,"file":"radio.spec.js","sourceRoot":"","sources":["radio.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, getDebugNode } from '@angular/core';\r\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { NgrxRadioViewAdapter } from './radio';\r\n\r\nconst TEST_ID = 'test ID';\r\n\r\nconst OPTION1_VALUE = 'op1';\r\nconst OPTION2_VALUE = 'op2';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'radio-test',\r\n  template: `\r\n<input type=\"radio\" value=\"op1\" [ngrxFormControlState]=\"state\" />\r\n<input type=\"radio\" value=\"op2\" checked=\"checked\" [ngrxFormControlState]=\"state\" />\r\n\r\n<input type=\"radio\" *ngFor=\"let o of stringOptions; trackBy: trackByIndex\" [value]=\"o\" [ngrxFormControlState]=\"state\" />\r\n\r\n<input type=\"radio\" *ngFor=\"let o of numberOptions; trackBy: trackByIndex\" [value]=\"o\" [ngrxFormControlState]=\"state\" />\r\n\r\n<input type=\"radio\" *ngFor=\"let o of booleanOptions; trackBy: trackByIndex\" [value]=\"o\" [ngrxFormControlState]=\"state\" />\r\n`,\r\n})\r\nexport class RadioTestComponent {\r\n  stringOptions = ['op1', 'op2'];\r\n  numberOptions = [1, 2];\r\n  booleanOptions = [true, false];\r\n  state = { id: TEST_ID } as any;\r\n  trackByIndex = (index: number) => index;\r\n}\r\n\r\ndescribe(NgrxRadioViewAdapter.name, () => {\r\n  let component: RadioTestComponent;\r\n  let fixture: ComponentFixture<RadioTestComponent>;\r\n  let viewAdapter1: NgrxRadioViewAdapter;\r\n  let viewAdapter2: NgrxRadioViewAdapter;\r\n  let element1: HTMLInputElement;\r\n  let element2: HTMLInputElement;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [\r\n        NgrxRadioViewAdapter,\r\n        RadioTestComponent,\r\n      ],\r\n    }).compileComponents();\r\n  }));\r\n\r\n  describe('static options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(RadioTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      element1 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[0] as HTMLInputElement;\r\n      element2 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[1] as HTMLInputElement;\r\n      viewAdapter1 = getDebugNode(element1)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter2 = getDebugNode(element2)!.injector.get(NgrxRadioViewAdapter);\r\n    });\r\n\r\n    it('should attach the view adapter', () => expect(viewAdapter1).toBeDefined());\r\n\r\n    it('should set the name of the elements', () => {\r\n      expect(element1.name).toBe(TEST_ID);\r\n      expect(element2.name).toBe(TEST_ID);\r\n    });\r\n\r\n    it('should set the name of the elements when the state\\'s ID changes', () => {\r\n      const newId = 'new ID';\r\n      viewAdapter1.ngrxFormControlState = { id: newId } as any;\r\n      viewAdapter2.ngrxFormControlState = { id: newId } as any;\r\n      fixture.detectChanges();\r\n      expect(element1.name).toBe(newId);\r\n      expect(element2.name).toBe(newId);\r\n    });\r\n\r\n    it('should mark the option as checked if same value is written', () => {\r\n      viewAdapter1.setViewValue(OPTION1_VALUE);\r\n      expect(element1.checked).toBe(true);\r\n    });\r\n\r\n    it('should mark the option as unchecked if different value is written', () => {\r\n      element1.checked = true;\r\n      viewAdapter1.setViewValue(OPTION2_VALUE);\r\n      expect(element1.checked).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      element1.checked = true;\r\n      element1.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(OPTION1_VALUE);\r\n    });\r\n\r\n    it('should call the registered function whenever the input is blurred', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnTouchedCallback(spy);\r\n      element1.dispatchEvent(new Event('blur'));\r\n      expect(spy).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should disable the input', () => {\r\n      viewAdapter1.setIsDisabled(true);\r\n      expect(element1.disabled).toBe(true);\r\n    });\r\n\r\n    it('should enable the input', () => {\r\n      element1.disabled = true;\r\n      viewAdapter1.setIsDisabled(false);\r\n      expect(element1.disabled).toBe(false);\r\n    });\r\n\r\n    it('should throw if state is undefined', () => {\r\n      expect(() => viewAdapter1.ngrxFormControlState = undefined as any).toThrowError();\r\n    });\r\n  });\r\n\r\n  describe('dynamic string options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(RadioTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      element1 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[2] as HTMLInputElement;\r\n      element2 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[3] as HTMLInputElement;\r\n      viewAdapter1 = getDebugNode(element1)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter2 = getDebugNode(element2)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter1.setViewValue(component.stringOptions[1]);\r\n      viewAdapter2.setViewValue(component.stringOptions[1]);\r\n    });\r\n\r\n    it('should mark the option as checked if same value is written', () => {\r\n      viewAdapter1.setViewValue(component.stringOptions[0]);\r\n      viewAdapter2.setViewValue(component.stringOptions[0]);\r\n      expect(element1.checked).toBe(true);\r\n    });\r\n\r\n    it('should mark the option as unchecked if different value is written', () => {\r\n      element1.checked = true;\r\n      viewAdapter1.setViewValue(component.stringOptions[1]);\r\n      viewAdapter2.setViewValue(component.stringOptions[1]);\r\n      expect(element1.checked).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      element1.checked = true;\r\n      element1.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.stringOptions[0]);\r\n    });\r\n\r\n    it('should call the registered function whenever the selected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 'new value';\r\n      component.stringOptions[1] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n\r\n    it('should not call the registered function whenever an unselected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 'new value';\r\n      component.stringOptions[0] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 'op3';\r\n      component.stringOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      const newElement = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[4] as HTMLInputElement;\r\n      const newViewAdapter = getDebugNode(newElement)!.injector.get(NgrxRadioViewAdapter);\r\n      newViewAdapter.setOnChangeCallback(spy);\r\n      newElement.checked = true;\r\n      newElement.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n  });\r\n\r\n  describe('dynamic number options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(RadioTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      element1 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[4] as HTMLInputElement;\r\n      element2 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[5] as HTMLInputElement;\r\n      viewAdapter1 = getDebugNode(element1)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter2 = getDebugNode(element2)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter1.setViewValue(component.numberOptions[1]);\r\n      viewAdapter2.setViewValue(component.numberOptions[1]);\r\n    });\r\n\r\n    it('should mark the option as checked if same value is written', () => {\r\n      viewAdapter1.setViewValue(component.numberOptions[0]);\r\n      viewAdapter2.setViewValue(component.numberOptions[0]);\r\n      expect(element1.checked).toBe(true);\r\n    });\r\n\r\n    it('should mark the option as unchecked if different value is written', () => {\r\n      element1.checked = true;\r\n      viewAdapter1.setViewValue(component.numberOptions[1]);\r\n      viewAdapter2.setViewValue(component.numberOptions[1]);\r\n      expect(element1.checked).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      element1.checked = true;\r\n      element1.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.numberOptions[0]);\r\n    });\r\n\r\n    it('should call the registered function whenever the selected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 3;\r\n      component.numberOptions[1] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n\r\n    it('should not call the registered function whenever an unselected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 3;\r\n      component.numberOptions[0] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = 3;\r\n      component.numberOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      const newElement = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[6] as HTMLInputElement;\r\n      const newViewAdapter = getDebugNode(newElement)!.injector.get(NgrxRadioViewAdapter);\r\n      newViewAdapter.setOnChangeCallback(spy);\r\n      newElement.checked = true;\r\n      newElement.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n  });\r\n\r\n  describe('dynamic boolean options', () => {\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(RadioTestComponent);\r\n      component = fixture.componentInstance;\r\n      fixture.detectChanges();\r\n      element1 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[6] as HTMLInputElement;\r\n      element2 = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[7] as HTMLInputElement;\r\n      viewAdapter1 = getDebugNode(element1)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter2 = getDebugNode(element2)!.injector.get(NgrxRadioViewAdapter);\r\n      viewAdapter1.setViewValue(component.booleanOptions[1]);\r\n      viewAdapter2.setViewValue(component.booleanOptions[1]);\r\n    });\r\n\r\n    it('should mark the option as checked if same value is written', () => {\r\n      viewAdapter1.setViewValue(component.booleanOptions[0]);\r\n      viewAdapter2.setViewValue(component.booleanOptions[0]);\r\n      expect(element1.checked).toBe(true);\r\n    });\r\n\r\n    it('should mark the option as unchecked if different value is written', () => {\r\n      element1.checked = true;\r\n      viewAdapter1.setViewValue(component.booleanOptions[1]);\r\n      viewAdapter2.setViewValue(component.booleanOptions[1]);\r\n      expect(element1.checked).toBe(false);\r\n    });\r\n\r\n    it('should call the registered function whenever the value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      element1.checked = true;\r\n      element1.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(component.booleanOptions[0]);\r\n    });\r\n\r\n    it('should call the registered function whenever the selected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = true;\r\n      component.booleanOptions[1] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n\r\n    it('should not call the registered function whenever an unselected option\\'s value changes', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = true;\r\n      component.booleanOptions[0] = newValue;\r\n      fixture.detectChanges();\r\n      expect(spy).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should create new options dynamically', () => {\r\n      const spy = jasmine.createSpy('fn');\r\n      viewAdapter1.setOnChangeCallback(spy);\r\n      viewAdapter2.setOnChangeCallback(spy);\r\n      const newValue = true;\r\n      component.booleanOptions.push(newValue);\r\n      fixture.detectChanges();\r\n      const newElement = (fixture.nativeElement as HTMLElement).querySelectorAll('input')[8] as HTMLInputElement;\r\n      const newViewAdapter = getDebugNode(newElement)!.injector.get(NgrxRadioViewAdapter);\r\n      newViewAdapter.setOnChangeCallback(spy);\r\n      newElement.checked = true;\r\n      newElement.dispatchEvent(new Event('change'));\r\n      expect(spy).toHaveBeenCalledWith(newValue);\r\n    });\r\n  });\r\n});\r\n"]}