{"version":3,"file":"status-css-classes.directive.e2e.spec.js","sourceRoot":"","sources":["status-css-classes.directive.e2e.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\r\n\r\nimport { createFormGroupState, FormGroupState } from './state';\r\nimport { NGRX_STATUS_CLASS_NAMES, NgrxStatusCssClassesDirective } from './status-css-classes.directive';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'classes-test',\r\n  template: `\r\n<form [ngrxFormState]=\"state\">\r\n  <input type=\"text\" [ngrxFormControlState]=\"state.controls.inner\" />\r\n  <select [ngrxFormControlState]=\"state.controls.inner\"><option value=\"A\">A</option></select>\r\n</form>\r\n  `,\r\n})\r\nexport class TestComponent {\r\n  @Input() state: FormGroupState<{ inner: string }>;\r\n}\r\n\r\ndescribe(NgrxStatusCssClassesDirective.name, () => {\r\n  let component: TestComponent;\r\n  let fixture: ComponentFixture<TestComponent>;\r\n  let formElement: HTMLFormElement;\r\n  let inputElement: HTMLInputElement;\r\n  let selectElement: HTMLSelectElement;\r\n  const FORM_CONTROL_ID = 'test ID';\r\n  const INITIAL_STATE = createFormGroupState(FORM_CONTROL_ID, { inner: 'A' });\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [\r\n        NgrxStatusCssClassesDirective,\r\n        TestComponent,\r\n      ],\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(TestComponent);\r\n    component = fixture.componentInstance;\r\n    component.state = INITIAL_STATE;\r\n    fixture.detectChanges();\r\n    const nativeElement = fixture.nativeElement as HTMLElement;\r\n    formElement = nativeElement.querySelector('form')!;\r\n    inputElement = nativeElement.querySelector('input')!;\r\n    selectElement = nativeElement.querySelector('select')!;\r\n  });\r\n\r\n  describe('should select the correct classes for isValid', () => {\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isInvalid', () => {\r\n    beforeEach(() => {\r\n      component.state = {\r\n        ...component.state,\r\n        errors: {\r\n          _inner: {\r\n            required: true,\r\n          },\r\n        },\r\n        isValid: false,\r\n        isInvalid: true,\r\n        controls: {\r\n          ...component.state.controls,\r\n          inner: {\r\n            ...component.state.controls.inner,\r\n            errors: {\r\n              required: true,\r\n            },\r\n            isValid: false,\r\n            isInvalid: true,\r\n          },\r\n        },\r\n      };\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValid);\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isInvalid);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isDirty', () => {\r\n    beforeEach(() => {\r\n      component.state = {\r\n        ...component.state,\r\n        isDirty: true,\r\n        isPristine: false,\r\n        controls: {\r\n          ...component.state.controls,\r\n          inner: {\r\n            ...component.state.controls.inner,\r\n            isDirty: true,\r\n            isPristine: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isPristine', () => {\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isDirty);\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isPristine);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isTouched', () => {\r\n    beforeEach(() => {\r\n      component.state = {\r\n        ...component.state,\r\n        isTouched: true,\r\n        isUntouched: false,\r\n        controls: {\r\n          ...component.state.controls,\r\n          inner: {\r\n            ...component.state.controls.inner,\r\n            isTouched: true,\r\n            isUntouched: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isUntouched', () => {\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isTouched);\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUntouched);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isSubmitted', () => {\r\n    beforeEach(() => {\r\n      component.state = {\r\n        ...component.state,\r\n        isSubmitted: true,\r\n        isUnsubmitted: false,\r\n        controls: {\r\n          ...component.state.controls,\r\n          inner: {\r\n            ...component.state.controls.inner,\r\n            isSubmitted: true,\r\n            isUnsubmitted: false,\r\n          },\r\n        },\r\n      };\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isUnsubmitted', () => {\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isSubmitted);\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isUnsubmitted);\r\n    });\r\n  });\r\n\r\n  describe('should select the correct classes for isValidationPending', () => {\r\n    const markAsValidationPending = () => {\r\n      component.state = {\r\n        ...component.state,\r\n        pendingValidations: ['test'],\r\n        isValidationPending: true,\r\n        controls: {\r\n          ...component.state.controls,\r\n          inner: {\r\n            ...component.state.controls.inner,\r\n            pendingValidations: ['test'],\r\n            isValidationPending: true,\r\n          },\r\n        },\r\n      };\r\n\r\n      fixture.detectChanges();\r\n    };\r\n\r\n    it('for form elements', () => {\r\n      expect(formElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n      markAsValidationPending();\r\n      expect(formElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n    });\r\n\r\n    it('for input elements', () => {\r\n      expect(inputElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n      markAsValidationPending();\r\n      expect(inputElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n    });\r\n\r\n    it('for select elements', () => {\r\n      expect(selectElement.classList).not.toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n      markAsValidationPending();\r\n      expect(selectElement.classList).toContain(NGRX_STATUS_CLASS_NAMES.isValidationPending);\r\n    });\r\n  });\r\n});\r\n"]}