{"version":3,"file":"actions.spec.js","sourceRoot":"","sources":["actions.spec.ts"],"names":[],"mappings":";;AAAA,qCAA8C;AAE9C,QAAQ,CAAC,2BAAiB,CAAC,IAAI,EAAE;IAC/B,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,CAAC,2BAAiB,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE;QACtD,MAAM,CAAC,2BAAiB,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE;QAC1D,MAAM,CAAC,2BAAiB,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,CAAC,2BAAiB,CAAC,EAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { isNgrxFormsAction } from './actions';\r\n\r\ndescribe(isNgrxFormsAction.name, () => {\r\n  it('should return true if type is ngrx/forms/', () => {\r\n    expect(isNgrxFormsAction({ type: 'ngrx/forms/' })).toBe(true);\r\n  });\r\n\r\n  it('should return true if type startsWith ngrx/forms/', () => {\r\n    expect(isNgrxFormsAction({ type: 'ngrx/forms/test' })).toBe(true);\r\n  });\r\n\r\n  it('should return false if type does not have ngrx/forms/', () => {\r\n    expect(isNgrxFormsAction({ type: 'some-type' })).toBe(false);\r\n  });\r\n\r\n  it('should return false if type is missing', () => {\r\n    expect(isNgrxFormsAction({} as any)).toBe(false);\r\n  });\r\n});\r\n"]}