{"version":3,"file":"disable.js","sourceRoot":"","sources":["disable.ts"],"names":[],"mappings":";;AAAA,sCAA2C;AAE3C,+BAAgD;AA+BhD,iBAAgC,KAAmC;IACjE,MAAM,CAAC,6BAAsB,CAAC,KAAK,EAAE,IAAI,uBAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AACpE,CAAC;AAFD,0BAEC","sourcesContent":["import { DisableAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and disables it. Disabling a control\r\n * will clear all of its errors (i.e. making it always valid) and will remove all\r\n * pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and disables it and all of its children.\r\n * Disabling a control will clear all of its errors (i.e. making it always valid) and\r\n * will remove all pending validations (thereby effectively cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a form state and disables it. For groups and arrays also\r\n * disables all children. Disabling a control will clear all of its errors (i.e. making\r\n * it always valid) and will remove all pending validations (thereby effectively\r\n * cancelling those validations).\r\n */\r\nexport function disable<TValue>(state: AbstractControlState<TValue>): AbstractControlState<TValue>;\r\n\r\nexport function disable<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new DisableAction(state.id));\r\n}\r\n"]}