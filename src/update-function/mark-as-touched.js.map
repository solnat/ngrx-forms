{"version":3,"file":"mark-as-touched.js","sourceRoot":"","sources":["mark-as-touched.ts"],"names":[],"mappings":";;AAAA,sCAAiD;AAEjD,+BAAgD;AAuBhD,uBAAsC,KAAmC;IACvE,MAAM,CAAC,6BAAsB,CAAC,KAAK,EAAE,IAAI,6BAAmB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1E,CAAC;AAFD,sCAEC","sourcesContent":["import { MarkAsTouchedAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState } from '../state';\r\nimport { abstractControlReducer } from './util';\r\n\r\n/**\r\n * This update function takes a form control state and marks it as touched.\r\n */\r\nexport function markAsTouched<TValue extends FormControlValueTypes>(state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a form array state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a form group state and marks it and all of its children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a state and marks it as touched. For groups and arrays this also marks\r\n * all children as touched.\r\n */\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>): AbstractControlState<TValue>;\r\n\r\nexport function markAsTouched<TValue>(state: AbstractControlState<TValue>) {\r\n  return abstractControlReducer(state, new MarkAsTouchedAction(state.id));\r\n}\r\n"]}