{"version":3,"file":"update-group.spec.js","sourceRoot":"","sources":["update-group.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsTouchedAction, SetValueAction } from '../actions';\nimport { FormGroupState } from '../state';\nimport { FORM_CONTROL_ID, FORM_CONTROL_INNER_ID, FormGroupValue, INITIAL_STATE, NestedValue } from './test-util';\nimport { createFormGroupReducerWithUpdate, updateGroup } from './update-group';\n\ndescribe(updateGroup.name, () => {\n  it('should apply the provided functions to control children', () => {\n    const expected = { ...INITIAL_STATE.controls.inner, value: 'A' };\n    const resultState = updateGroup<FormGroupValue>({\n      inner: () => expected,\n    })(INITIAL_STATE);\n    expect(resultState.controls.inner).toBe(expected);\n  });\n\n  it('should apply the provided functions to group children', () => {\n    const expected = { ...INITIAL_STATE.controls.inner3, value: { inner4: 'A' } };\n    const resultState = updateGroup<FormGroupValue>({\n      inner3: () => expected,\n    })(INITIAL_STATE);\n    expect(resultState.controls.inner3).toBe(expected);\n  });\n\n  it('should apply the provided functions to array children', () => {\n    const expected = { ...INITIAL_STATE.controls.inner5, value: ['A'] };\n    const resultState = updateGroup<FormGroupValue>({\n      inner5: () => expected,\n    })(INITIAL_STATE);\n    expect(resultState.controls.inner5).toBe(expected);\n  });\n\n  it('should not change the state with empty update object', () => {\n    const resultState = updateGroup<FormGroupValue>({})(INITIAL_STATE);\n    expect(resultState).toBe(resultState);\n  });\n\n  it('should apply the provided functions to control children uncurried', () => {\n    const expected = { ...INITIAL_STATE.controls.inner, value: 'A' };\n    const resultState = updateGroup<FormGroupValue>(\n      INITIAL_STATE,\n      {\n        inner: () => expected,\n      },\n    );\n    expect(resultState.controls.inner).toBe(expected);\n  });\n\n  it('should apply the provided functions to group children uncurried', () => {\n    const expected = { ...INITIAL_STATE.controls.inner3, value: { inner4: 'A' } };\n    const resultState = updateGroup<FormGroupValue>(\n      INITIAL_STATE,\n      {\n        inner3: () => expected,\n      },\n    );\n    expect(resultState.controls.inner3).toBe(expected);\n  });\n\n  it('should apply the provided functions to array children uncurried', () => {\n    const expected = { ...INITIAL_STATE.controls.inner5, value: ['A'] };\n    const resultState = updateGroup<FormGroupValue>(\n      INITIAL_STATE,\n      {\n        inner5: () => expected,\n      },\n    );\n    expect(resultState.controls.inner5).toBe(expected);\n  });\n\n  it('should not change the state with empty update object uncurried', () => {\n    const resultState = updateGroup<FormGroupValue>(INITIAL_STATE, {});\n    expect(resultState).toBe(resultState);\n  });\n\n  it('should apply multiple provided function objects one after another', () => {\n    const updatedInner1 = { ...INITIAL_STATE.controls.inner, value: 'A' };\n    const expectedInner1 = { ...INITIAL_STATE.controls.inner, value: 'B' };\n    const expectedInner3 = { ...INITIAL_STATE.controls.inner3, value: { inner4: 'A' } };\n    const resultState = updateGroup<FormGroupValue>({\n      inner: () => updatedInner1,\n      inner3: () => expectedInner3,\n    }, {\n        inner: () => expectedInner1,\n      })(INITIAL_STATE);\n    expect(resultState.controls.inner).toBe(expectedInner1);\n    expect(resultState.controls.inner3).toBe(expectedInner3);\n  });\n\n  it('should pass the parent group as the second parameter', () => {\n    updateGroup<FormGroupValue>({\n      inner3: (c, p) => {\n        expect(p).toBe(INITIAL_STATE);\n        return c;\n      },\n    })(INITIAL_STATE);\n  });\n});\n\ndescribe(createFormGroupReducerWithUpdate.name, () => {\n  it('should apply the action and the provided functions to control children', () => {\n    const value = 'A';\n    const resultState = createFormGroupReducerWithUpdate<FormGroupValue>({\n      inner: s => ({ ...s, value }),\n    })(INITIAL_STATE, new MarkAsTouchedAction(FORM_CONTROL_ID));\n    expect(resultState.controls.inner.isTouched).toBe(true);\n    expect(resultState.controls.inner.value).toBe(value);\n  });\n\n  it('should apply the action and the provided functions to group children', () => {\n    const value = { inner4: 'A' };\n    const resultState = createFormGroupReducerWithUpdate<FormGroupValue>({\n      inner3: s => ({ ...s, value }),\n    })(INITIAL_STATE, new MarkAsTouchedAction(FORM_CONTROL_ID));\n    expect(resultState.controls.inner3.isTouched).toBe(true);\n    expect(resultState.controls.inner3.value).toBe(value);\n  });\n\n  it('should apply the action and the provided functions to nested children', () => {\n    const value = 'A';\n    const resultState = createFormGroupReducerWithUpdate<FormGroupValue>({\n      inner3: updateGroup<NestedValue>({\n        inner4: s => ({ ...s, value }),\n      }),\n    })(INITIAL_STATE, new MarkAsTouchedAction(FORM_CONTROL_ID));\n    expect((resultState.controls.inner3 as FormGroupState<NestedValue>).controls.inner4.isTouched).toBe(true);\n    expect((resultState.controls.inner3 as FormGroupState<NestedValue>).controls.inner4.value).toBe(value);\n  });\n\n  it('should first apply the action and then the provided functions', () => {\n    const expected = { ...INITIAL_STATE.controls.inner, value: 'A' };\n    const resultState = createFormGroupReducerWithUpdate<FormGroupValue>({\n      inner: () => expected,\n    })(INITIAL_STATE, new SetValueAction(FORM_CONTROL_INNER_ID, 'B'));\n    expect(resultState.controls.inner).toBe(expected);\n  });\n\n  it('should apply multiple provided function objects one after another', () => {\n    const updatedInner1 = { ...INITIAL_STATE.controls.inner, value: 'A' };\n    const expectedInner1 = { ...INITIAL_STATE.controls.inner, value: 'B' };\n    const expectedInner3 = { ...INITIAL_STATE.controls.inner3, value: { inner4: 'A' } };\n    const resultState = createFormGroupReducerWithUpdate<FormGroupValue>({\n      inner: () => updatedInner1,\n      inner3: () => expectedInner3,\n    }, {\n        inner: () => expectedInner1,\n      })(INITIAL_STATE, new SetValueAction(FORM_CONTROL_INNER_ID, 'D'));\n    expect(resultState.controls.inner).toBe(expectedInner1);\n    expect(resultState.controls.inner3).toBe(expectedInner3);\n  });\n});\n"]}