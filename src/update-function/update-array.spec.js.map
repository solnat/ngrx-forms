{"version":3,"file":"update-array.spec.js","sourceRoot":"","sources":["update-array.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { createFormArrayState } from '../state';\nimport { FORM_CONTROL_ID } from './test-util';\nimport { updateArray } from './update-array';\nimport { updateGroup } from './update-group';\n\ndescribe(updateArray.name, () => {\n  it('should apply the provided functions to control children', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['']);\n    const expected = { ...state.controls[0], value: 'A' };\n    const resultState = updateArray<typeof expected.value>(() => expected)(state);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply the provided functions to all control children', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['', '']);\n    const expected = { ...state.controls[0], value: 'A' };\n    const resultState = updateArray<typeof expected.value>(() => expected)(state);\n    expect(resultState.controls[0]).toBe(expected);\n    expect(resultState.controls[1]).toBe(expected);\n  });\n\n  it('should apply the provided functions to group children', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, [{ inner: '' }]);\n    const expected = { ...state.controls[0], value: { inner: 'A' } };\n    const resultState = updateArray<typeof expected.value>(() => expected)(state);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply the provided functions to array children', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, [['']]);\n    const expected = { ...state.controls[0], value: ['A'] };\n    const resultState = updateArray<typeof expected.value>(() => expected)(state);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply the provided functions to control children uncurried', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['']);\n    const expected = { ...state.controls[0], value: 'A' };\n    const resultState = updateArray<typeof expected.value>(state, () => expected);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply the provided functions to all control children uncurried', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['', '']);\n    const expected = { ...state.controls[0], value: 'A' };\n    const resultState = updateArray<typeof expected.value>(state, () => expected);\n    expect(resultState.controls[0]).toBe(expected);\n    expect(resultState.controls[1]).toBe(expected);\n  });\n\n  it('should apply the provided functions to group children uncurried', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, [{ inner: '' }]);\n    const expected = { ...state.controls[0], value: { inner: 'A' } };\n    const resultState = updateArray<typeof expected.value>(state, () => expected);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply the provided functions to array children uncurried', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, [['']]);\n    const expected = { ...state.controls[0], value: ['A'] };\n    const resultState = updateArray<typeof expected.value>(state, () => expected);\n    expect(resultState.controls[0]).toBe(expected);\n  });\n\n  it('should apply multiple provided functions one after another', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['A', 'B', 'C']);\n    const expected1 = { ...state.controls[0], value: 'D' };\n    const expected2 = { ...state.controls[1], value: 'E' };\n    const expected3 = { ...state.controls[2], value: 'F' };\n    let resultState = updateArray<typeof expected1.value>(s => s.value === 'A' ? expected1 : s.value === 'B' ? expected3 : s)(state);\n    resultState = updateArray<typeof expected1.value>(s => s.value === 'F' ? expected2 : s.value === 'C' ? expected3 : s)(resultState);\n    expect(resultState.controls[0]).toBe(expected1);\n    expect(resultState.controls[1]).toBe(expected2);\n    expect(resultState.controls[2]).toBe(expected3);\n  });\n\n  it('should pass the parent array as the second parameter', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['', '']);\n    updateArray<typeof state.value[0]>((c, p) => {\n      expect(p).toBe(state);\n      return c;\n    })(state);\n  });\n\n  it('should pass the index as the third parameter', () => {\n    const state = createFormArrayState(FORM_CONTROL_ID, ['', '']);\n    let loopCount = 0;\n    updateArray<typeof state.value[0]>((c, p, i) => {\n      expect(i).toBe(loopCount++);\n      return c;\n    })(state);\n  });\n\n  it('should work inside of an updateGroup', () => {\n    interface Outer {\n      inner: Inner[];\n    }\n\n    interface Inner {\n      s: string;\n    }\n\n    // this just asserts it compiles without type error\n    const validationFormGroupReducer = updateGroup<Outer>({\n      inner: updateArray<Inner>(\n        updateGroup<Inner>({\n          s: s => s,\n        }),\n      ),\n    });\n\n    expect(validationFormGroupReducer).toBeDefined();\n  });\n});\n"]}