{"version":3,"file":"set-user-defined-property.spec.js","sourceRoot":"","sources":["set-user-defined-property.spec.ts"],"names":[],"mappings":";;AAAA,yEAAqE;AACrE,yCAA4C;AAE5C,QAAQ,CAAC,kDAAsB,CAAC,IAAI,EAAE;IACpC,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,yBAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrF,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,yBAAa,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,yBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,EAAE,yBAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACrF,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC7C,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,EAAE,yBAAa,CAAC,CAAC;QACtE,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC7C,IAAM,WAAW,GAAG,kDAAsB,CAAC,MAAM,EAAE,EAAE,EAAE,yBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACtF,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACzC,MAAM,CAAC,cAAM,OAAA,kDAAsB,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,SAAgB,CAAC,EAApD,CAAoD,CAAC,CAAC,YAAY,EAAE,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { setUserDefinedProperty } from './set-user-defined-property';\r\nimport { INITIAL_STATE } from './test-util';\r\n\r\ndescribe(setUserDefinedProperty.name, () => {\r\n  it('should call reducer for controls', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12)(INITIAL_STATE.controls.inner);\r\n    expect(resultState).not.toBe(INITIAL_STATE.controls.inner);\r\n  });\r\n\r\n  it('should call reducer for groups', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12)(INITIAL_STATE);\r\n    expect(resultState).not.toBe(INITIAL_STATE);\r\n  });\r\n\r\n  it('should call reducer for arrays', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12)(INITIAL_STATE.controls.inner5);\r\n    expect(resultState).not.toBe(INITIAL_STATE.controls.inner5);\r\n  });\r\n\r\n  it('should call reducer for controls uncurried', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12, INITIAL_STATE.controls.inner);\r\n    expect(resultState).not.toBe(INITIAL_STATE.controls.inner);\r\n  });\r\n\r\n  it('should call reducer for groups uncurried', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12, INITIAL_STATE);\r\n    expect(resultState).not.toBe(INITIAL_STATE);\r\n  });\r\n\r\n  it('should call reducer for arrays uncurried', () => {\r\n    const resultState = setUserDefinedProperty('prop', 12, INITIAL_STATE.controls.inner5);\r\n    expect(resultState).not.toBe(INITIAL_STATE.controls.inner5);\r\n  });\r\n\r\n  it('should throw if curried and no state', () => {\r\n    expect(() => setUserDefinedProperty('prop', 12)(undefined as any)).toThrowError();\r\n  });\r\n});\r\n"]}