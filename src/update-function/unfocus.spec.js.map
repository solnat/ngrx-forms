{"version":3,"file":"unfocus.spec.js","sourceRoot":"","sources":["unfocus.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kCAAgC;AAChC,yCAA4C;AAC5C,qCAAoC;AAEpC,QAAQ,CAAC,iBAAO,CAAC,IAAI,EAAE;IACrB,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAM,KAAK,gBAAQ,yBAAa,CAAC,QAAQ,CAAC,KAAK,IAAE,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,GAAE,CAAC;QACvF,IAAM,WAAW,GAAG,iBAAO,CAAC,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,YAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { cast } from '../state';\r\nimport { INITIAL_STATE } from './test-util';\r\nimport { unfocus } from './unfocus';\r\n\r\ndescribe(unfocus.name, () => {\r\n  it('should call reducer for controls', () => {\r\n    const state = { ...INITIAL_STATE.controls.inner, isFocused: true, isUnfocused: false };\r\n    const resultState = unfocus(cast(state));\r\n    expect(resultState).not.toBe(cast(state));\r\n  });\r\n});\r\n"]}