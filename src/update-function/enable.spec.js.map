{"version":3,"file":"enable.spec.js","sourceRoot":"","sources":["enable.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kCAAgC;AAChC,mCAAkC;AAClC,yCAA4C;AAE5C,QAAQ,CAAC,eAAM,CAAC,IAAI,EAAE;IACpB,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAM,KAAK,gBAAQ,yBAAa,CAAC,QAAQ,CAAC,KAAK,IAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,GAAE,CAAC;QACtF,IAAM,WAAW,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,KAAK,gBACN,yBAAa,IAChB,SAAS,EAAE,KAAK,EAChB,UAAU,EAAE,IAAI,EAChB,QAAQ,eACH,yBAAa,CAAC,QAAQ,IACzB,KAAK,eACA,yBAAa,CAAC,QAAQ,CAAC,KAAK,IAC/B,SAAS,EAAE,KAAK,EAChB,UAAU,EAAE,IAAI,SAGrB,CAAC;QACF,IAAM,WAAW,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE;QACnC,IAAM,WAAW,GAAG,YAAI,CAAC,yBAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxD,IAAM,KAAK,gBACN,WAAW,IACd,SAAS,EAAE,KAAK,EAChB,UAAU,EAAE,IAAI,EAChB,QAAQ,EACH,WAAW,CAAC,QAAQ;6BAElB,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAC1B,SAAS,EAAE,KAAK,EAChB,UAAU,EAAE,IAAI;iBAGrB,CAAC;QACF,IAAM,WAAW,GAAG,eAAM,CAAC,KAAK,CAAC,CAAC;QAClC,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { cast } from '../state';\r\nimport { enable } from './enable';\r\nimport { INITIAL_STATE } from './test-util';\r\n\r\ndescribe(enable.name, () => {\r\n  it('should call reducer for controls', () => {\r\n    const state = { ...INITIAL_STATE.controls.inner, isEnabled: false, isDisabled: true };\r\n    const resultState = enable(state);\r\n    expect(resultState).not.toBe(state);\r\n  });\r\n\r\n  it('should call reducer for groups', () => {\r\n    const state = {\r\n      ...INITIAL_STATE,\r\n      isEnabled: false,\r\n      isDisabled: true,\r\n      controls: {\r\n        ...INITIAL_STATE.controls,\r\n        inner: {\r\n          ...INITIAL_STATE.controls.inner,\r\n          isEnabled: false,\r\n          isDisabled: true,\r\n        },\r\n      },\r\n    };\r\n    const resultState = enable(state);\r\n    expect(resultState).not.toBe(state);\r\n  });\r\n\r\n  it('should call reducer for arrays', () => {\r\n    const inner5State = cast(INITIAL_STATE.controls.inner5);\r\n    const state = {\r\n      ...inner5State,\r\n      isEnabled: false,\r\n      isDisabled: true,\r\n      controls: [\r\n        ...inner5State.controls,\r\n        {\r\n          ...inner5State.controls[0],\r\n          isEnabled: false,\r\n          isDisabled: true,\r\n        },\r\n      ],\r\n    };\r\n    const resultState = enable(state);\r\n    expect(resultState).not.toBe(state);\r\n  });\r\n});\r\n"]}