{"version":3,"file":"set-value.js","sourceRoot":"","sources":["set-value.ts"],"names":[],"mappings":";;AAAA,sCAA4C;AAE5C,+BAA6D;AAwC7D,kBAAiC,KAAa,EAAE,KAAoC;IAClF,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,6BAAsB,CAAC,KAAK,EAAE,IAAI,wBAAc,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5E,CAAC;IAED,MAAM,CAAC,UAAC,CAA+B,IAAK,OAAA,QAAQ,CAAC,KAAK,EAAE,kBAAW,CAAC,CAAC,CAAC,CAAC,EAA/B,CAA+B,CAAC;AAC9E,CAAC;AAND,4BAMC","sourcesContent":["import { SetValueAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a value and returns a projection function that\r\n * sets the value of a form state. Setting the value of a group or array will\r\n * also update the values of all children including adding and removing\r\n * children on the fly for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(value: TValue): (state: AbstractControlState<TValue>) => AbstractControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a value and a form control state and sets the\r\n * value of the state.\r\n */\r\nexport function setValue<TValue extends FormControlValueTypes>(value: TValue, state: FormControlState<TValue>): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a value and a form array state and sets the\r\n * value of the state. This will also update the values of all children\r\n * including adding and removing children on the fly for added/removed\r\n * items.\r\n */\r\nexport function setValue<TValue>(value: TValue, state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a value and a form group state and sets the\r\n * value of the state. This will also update the values of all children\r\n * including adding and removing children on the fly for added/removed\r\n * properties.\r\n */\r\nexport function setValue<TValue>(value: TValue, state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a value and a form state and sets the value\r\n * of the state. Setting the value of a group or array will also update the\r\n * values of all children including adding and removing children on the fly\r\n * for added/removed properties/items.\r\n */\r\nexport function setValue<TValue>(value: TValue, state: AbstractControlState<TValue>): AbstractControlState<TValue>;\r\n\r\nexport function setValue<TValue>(value: TValue, state?: AbstractControlState<TValue>) {\r\n  if (!!state) {\r\n    return abstractControlReducer(state, new SetValueAction(state.id, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setValue(value, ensureState(s));\r\n}\r\n"]}