{"version":3,"file":"add-group-control.js","sourceRoot":"","sources":["add-group-control.ts"],"names":[],"mappings":";;AAAA,sCAAmD;AACnD,4CAAoD;AAEpD,+BAAqC;AAqBrC,yBACE,IAAkB,EAClB,KAA0B,EAC1B,KAA8B;IAE9B,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,0BAAgB,CAAC,KAAK,EAAE,IAAI,+BAAqB,CAAsB,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACxG,CAAC;IAED,MAAM,CAAC,UAAC,CAAyB,IAAK,OAAA,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,kBAAW,CAAC,CAAC,CAAC,CAAC,EAA5C,CAA4C,CAAC;AACrF,CAAC;AAVD,0CAUC","sourcesContent":["import { AddGroupControlAction } from '../actions';\nimport { formGroupReducer } from '../group/reducer';\nimport { FormGroupState, KeyValue } from '../state';\nimport { ensureState } from './util';\n\n/**\n * This update function takes a name and a value and returns a projection function\n * that adds a child control with the given name and value to a form group state.\n */\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = string>(\n  name: keyof TValue,\n  value: TValue[TControlKey],\n): (state: FormGroupState<TValue>) => FormGroupState<TValue>;\n\n/**\n * This update function takes a name, a value, and a form group state and adds a child\n * control with the given name and value to the form group state.\n */\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = string>(\n  name: keyof TValue,\n  value: TValue[TControlKey],\n  state: FormGroupState<TValue>,\n): FormGroupState<TValue>;\n\nexport function addGroupControl<TValue extends KeyValue, TControlKey extends keyof TValue = string>(\n  name: keyof TValue,\n  value: TValue[TControlKey],\n  state?: FormGroupState<TValue>,\n) {\n  if (!!state) {\n    return formGroupReducer(state, new AddGroupControlAction<TValue, TControlKey>(state.id, name, value));\n  }\n\n  return (s: FormGroupState<TValue>) => addGroupControl(name, value, ensureState(s));\n}\n"]}