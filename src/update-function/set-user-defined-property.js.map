{"version":3,"file":"set-user-defined-property.js","sourceRoot":"","sources":["set-user-defined-property.ts"],"names":[],"mappings":";;AAAA,sCAA0D;AAE1D,+BAA6D;AAoC7D,gCAA+C,IAAY,EAAE,KAAU,EAAE,KAAoC;IAC3G,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,6BAAsB,CAAC,KAAK,EAAE,IAAI,sCAA4B,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,UAAC,CAA+B,IAAK,OAAA,sBAAsB,CAAC,IAAI,EAAE,KAAK,EAAE,kBAAW,CAAC,CAAC,CAAC,CAAC,EAAnD,CAAmD,CAAC;AAClG,CAAC;AAND,wDAMC","sourcesContent":["import { SetUserDefinedPropertyAction } from '../actions';\r\nimport { AbstractControlState, FormArrayState, FormControlState, FormControlValueTypes, FormGroupState } from '../state';\r\nimport { abstractControlReducer, ensureState } from './util';\r\n\r\n/**\r\n * This update function takes a name and a value and returns\r\n * a projection function that sets a user-defined property on\r\n * a form state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(name: string, value: any): (state: AbstractControlState<TValue>) => AbstractControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a name, a value, and a form\r\n * state and sets a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue extends FormControlValueTypes>(\r\n  name: string, value: any,\r\n  state: FormControlState<TValue>,\r\n): FormControlState<TValue>;\r\n\r\n/**\r\n * This update function takes a name, a value, and a form\r\n * array state and sets a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(name: string, value: any, state: FormArrayState<TValue>): FormArrayState<TValue>;\r\n\r\n/**\r\n * This update function takes a name, a value, and a form\r\n * group state and sets a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(name: string, value: any, state: FormGroupState<TValue>): FormGroupState<TValue>;\r\n\r\n/**\r\n * This update function takes a name, a value, and a form\r\n * state and sets a user-defined property on the state.\r\n */\r\nexport function setUserDefinedProperty<TValue>(name: string, value: any, state: AbstractControlState<TValue>): AbstractControlState<TValue>;\r\n\r\nexport function setUserDefinedProperty<TValue>(name: string, value: any, state?: AbstractControlState<TValue>) {\r\n  if (!!state) {\r\n    return abstractControlReducer(state, new SetUserDefinedPropertyAction(state.id, name, value));\r\n  }\r\n\r\n  return (s: AbstractControlState<TValue>) => setUserDefinedProperty(name, value, ensureState(s));\r\n}\r\n"]}