{"version":3,"file":"status-css-classes.directive.js","sourceRoot":"","sources":["status-css-classes.directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA8D;AAG9D;;;GAGG;AACU,QAAA,uBAAuB,GAAG;IACrC,OAAO,EAAE,kBAAkB;IAC3B,SAAS,EAAE,oBAAoB;IAC/B,OAAO,EAAE,kBAAkB;IAC3B,UAAU,EAAE,qBAAqB;IACjC,SAAS,EAAE,oBAAoB;IAC/B,WAAW,EAAE,sBAAsB;IACnC,WAAW,EAAE,sBAAsB;IACnC,aAAa,EAAE,wBAAwB;IACvC,mBAAmB,EAAE,+BAA+B;CACrD,CAAC;AAKF,IAAa,6BAA6B;IAA1C;IAyDA,CAAC;IArDC,sBAAI,+DAAoB;aAAxB,UAAyB,KAAgC;YACvD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAAA;IAGD,sBAAI,wDAAa;aAAjB,UAAkB,KAAgC;YAChD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAAA;IAGD,sBAAI,kDAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5B,CAAC;;;OAAA;IAGD,sBAAI,oDAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9B,CAAC;;;OAAA;IAGD,sBAAI,kDAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAC5B,CAAC;;;OAAA;IAGD,sBAAI,qDAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAC/B,CAAC;;;OAAA;IAGD,sBAAI,oDAAS;aAAb;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9B,CAAC;;;OAAA;IAGD,sBAAI,sDAAW;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QAChC,CAAC;;;OAAA;IAGD,sBAAI,sDAAW;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC;QAChC,CAAC;;;OAAA;IAGD,sBAAI,wDAAa;aAAjB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAClC,CAAC;;;OAAA;IAGD,sBAAI,8DAAmB;aAAvB;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;QACxC,CAAC;;;OAAA;IACH,oCAAC;AAAD,CAAC,AAzDD,IAyDC;AArDC;IADC,YAAK,EAAE;;;yEAGP;AAGD;IADC,YAAK,EAAE;;;kEAGP;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,OAAS,CAAC;;;4DAGvD;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,SAAW,CAAC;;;8DAGzD;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,OAAS,CAAC;;;4DAGvD;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,UAAY,CAAC;;;+DAG1D;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,SAAW,CAAC;;;8DAGzD;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,WAAa,CAAC;;;gEAG3D;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,WAAa,CAAC;;;gEAG3D;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,aAAe,CAAC;;;kEAG7D;AAGD;IADC,kBAAW,CAAC,WAAS,+BAAuB,CAAC,mBAAqB,CAAC;;;wEAGnE;AAxDU,6BAA6B;IAHzC,gBAAS,CAAC;QACT,QAAQ,EAAE,4CAA4C;KACvD,CAAC;GACW,6BAA6B,CAyDzC;AAzDY,sEAA6B","sourcesContent":["import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { AbstractControlState } from './state';\r\n\r\n/**\r\n * Lists the available status class names based on the property\r\n * they are depending on.\r\n */\r\nexport const NGRX_STATUS_CLASS_NAMES = {\r\n  isValid: 'ngrx-forms-valid',\r\n  isInvalid: 'ngrx-forms-invalid',\r\n  isDirty: 'ngrx-forms-dirty',\r\n  isPristine: 'ngrx-forms-pristine',\r\n  isTouched: 'ngrx-forms-touched',\r\n  isUntouched: 'ngrx-forms-untouched',\r\n  isSubmitted: 'ngrx-forms-submitted',\r\n  isUnsubmitted: 'ngrx-forms-unsubmitted',\r\n  isValidationPending: 'ngrx-forms-validation-pending',\r\n};\r\n\r\n@Directive({\r\n  selector: 'form[ngrxFormState],[ngrxFormControlState]',\r\n})\r\nexport class NgrxStatusCssClassesDirective {\r\n  private state: AbstractControlState<any>;\r\n\r\n  @Input()\r\n  set ngrxFormControlState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @Input()\r\n  set ngrxFormState(state: AbstractControlState<any>) {\r\n    this.state = state;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValid}`)\r\n  get isValid() {\r\n    return this.state.isValid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isInvalid}`)\r\n  get isInvalid() {\r\n    return this.state.isInvalid;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isDirty}`)\r\n  get isDirty() {\r\n    return this.state.isDirty;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isPristine}`)\r\n  get isPristine() {\r\n    return this.state.isPristine;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isTouched}`)\r\n  get isTouched() {\r\n    return this.state.isTouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUntouched}`)\r\n  get isUntouched() {\r\n    return this.state.isUntouched;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isSubmitted}`)\r\n  get isSubmitted() {\r\n    return this.state.isSubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isUnsubmitted}`)\r\n  get isUnsubmitted() {\r\n    return this.state.isUnsubmitted;\r\n  }\r\n\r\n  @HostBinding(`class.${NGRX_STATUS_CLASS_NAMES.isValidationPending}`)\r\n  get isValidationPending() {\r\n    return this.state.isValidationPending;\r\n  }\r\n}\r\n"]}