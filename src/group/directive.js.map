{"version":3,"file":"directive.js","sourceRoot":"","sources":["directive.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAuE;AACvE,qCAA6C;AAE7C,sCAAmD;AAMnD,IAAa,iBAAiB;IAI5B,2BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEvD,oCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAGD,oCAAQ,GAAR,UAAS,KAAY;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,+BAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAAC,AAnBD,IAmBC;AAjByB;IAAvB,YAAK,CAAC,eAAe,CAAC;;gDAA+B;AAWtD;IADC,mBAAY,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC;;qCACnB,KAAK;;iDAKpB;AAlBU,iBAAiB;IAH7B,gBAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;KAChC,CAAC;qCAKoC,sBAAc;GAJvC,iBAAiB,CAmB7B;AAnBY,8CAAiB","sourcesContent":["import { Directive, Input, HostListener, OnInit } from '@angular/core';\r\nimport { ActionsSubject } from '@ngrx/store';\r\n\r\nimport { MarkAsSubmittedAction } from '../actions';\r\nimport { FormGroupState } from '../state';\r\n\r\n@Directive({\r\n  selector: 'form[ngrxFormState]',\r\n})\r\nexport class NgrxFormDirective<TValue extends { [key: string]: any }> implements OnInit {\r\n  // tslint:disable-next-line:no-input-rename\r\n  @Input('ngrxFormState') state: FormGroupState<TValue>;\r\n\r\n  constructor(private actionsSubject: ActionsSubject) { }\r\n\r\n  ngOnInit() {\r\n    if (!this.state) {\r\n      throw new Error('The form state must not be undefined!');\r\n    }\r\n  }\r\n\r\n  @HostListener('submit', ['$event'])\r\n  onSubmit(event: Event) {\r\n    event.preventDefault();\r\n    if (this.state.isUnsubmitted) {\r\n      this.actionsSubject.next(new MarkAsSubmittedAction(this.state.id));\r\n    }\r\n  }\r\n}\r\n"]}