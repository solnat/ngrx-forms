{"version":3,"file":"mark-as-touched.spec.js","sourceRoot":"","sources":["mark-as-touched.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsTouchedAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { markAsTouchedReducer } from './mark-as-touched';\r\nimport {\r\n  FORM_CONTROL_ID,\r\n  FORM_CONTROL_INNER3_ID,\r\n  FORM_CONTROL_INNER5_ID,\r\n  FORM_CONTROL_INNER_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_FULL,\r\n  setPropertiesRecursively,\r\n} from './test-util';\r\n\r\ndescribe(`form group ${markAsTouchedReducer.name}`, () => {\r\n  const INITIAL_STATE_FULL_TOUCHED = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isTouched', true], ['isUntouched', false]]));\r\n\r\n  it('should mark itself and all children recursively as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_FULL_TOUCHED);\r\n  });\r\n\r\n  it('should not update state if all children are marked as touched recursively', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL_TOUCHED, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE_FULL_TOUCHED);\r\n  });\r\n\r\n  it('should mark children as touched if the group itself is already marked as touched', () => {\r\n    const state = {\r\n      ...INITIAL_STATE_FULL,\r\n      isTouched: true,\r\n      isUntouched: false,\r\n      controls: {\r\n        ...INITIAL_STATE_FULL.controls,\r\n        inner: {\r\n          ...INITIAL_STATE_FULL.controls.inner,\r\n          isTouched: true,\r\n          isUntouched: false,\r\n        },\r\n      },\r\n    };\r\n    const resultState = markAsTouchedReducer(state, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_FULL_TOUCHED);\r\n  });\r\n\r\n  it('should mark control children as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner.isTouched).toEqual(true);\r\n    expect(resultState.controls.inner.isUntouched).toEqual(false);\r\n  });\r\n\r\n  it('should mark group children as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner3.isTouched).toEqual(true);\r\n    expect(resultState.controls.inner3.isUntouched).toEqual(false);\r\n  });\r\n\r\n  it('should mark array children as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL, new MarkAsTouchedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner5.isTouched).toEqual(true);\r\n    expect(resultState.controls.inner5.isUntouched).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as touched if control child is marked as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE, new MarkAsTouchedAction(FORM_CONTROL_INNER_ID));\r\n    expect(resultState.isTouched).toEqual(true);\r\n    expect(resultState.isUntouched).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as touched if group child is marked as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL, new MarkAsTouchedAction(FORM_CONTROL_INNER3_ID));\r\n    expect(resultState.isTouched).toEqual(true);\r\n    expect(resultState.isUntouched).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as touched if array child is marked as touched', () => {\r\n    const resultState = markAsTouchedReducer(INITIAL_STATE_FULL, new MarkAsTouchedAction(FORM_CONTROL_INNER5_ID));\r\n    expect(resultState.isTouched).toEqual(true);\r\n    expect(resultState.isUntouched).toEqual(false);\r\n  });\r\n});\r\n"]}