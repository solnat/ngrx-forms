{"version":3,"file":"mark-as-submitted.spec.js","sourceRoot":"","sources":["mark-as-submitted.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsSubmittedAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { markAsSubmittedReducer } from './mark-as-submitted';\r\nimport {\r\n  FORM_CONTROL_ID,\r\n  FORM_CONTROL_INNER3_ID,\r\n  FORM_CONTROL_INNER5_ID,\r\n  FORM_CONTROL_INNER_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_FULL,\r\n  setPropertiesRecursively,\r\n} from './test-util';\r\n\r\ndescribe(`form group ${markAsSubmittedReducer.name}`, () => {\r\n  const INITIAL_STATE_FULL_SUBMITTED = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n\r\n  it('should mark itself and all children recursively as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_FULL_SUBMITTED);\r\n  });\r\n\r\n  it('should not update state if all children are marked as submitted recursively', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL_SUBMITTED, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE_FULL_SUBMITTED);\r\n  });\r\n\r\n  it('should mark children as submitted if the group itself is already marked as submitted', () => {\r\n    const state = {\r\n      ...INITIAL_STATE_FULL,\r\n      isSubmitted: true,\r\n      isUnsubmitted: false,\r\n      controls: {\r\n        ...INITIAL_STATE_FULL.controls,\r\n        inner: {\r\n          ...INITIAL_STATE_FULL.controls.inner,\r\n          isSubmitted: true,\r\n          isUnsubmitted: false,\r\n        },\r\n      },\r\n    };\r\n    const resultState = markAsSubmittedReducer(state, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toEqual(INITIAL_STATE_FULL_SUBMITTED);\r\n  });\r\n\r\n  it('should mark control children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner.isSubmitted).toEqual(true);\r\n    expect(resultState.controls.inner.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark group children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner3.isSubmitted).toEqual(true);\r\n    expect(resultState.controls.inner3.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark array children as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL, new MarkAsSubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner5.isSubmitted).toEqual(true);\r\n    expect(resultState.controls.inner5.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if control child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE, new MarkAsSubmittedAction(FORM_CONTROL_INNER_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if group child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL, new MarkAsSubmittedAction(FORM_CONTROL_INNER3_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as submitted if array child is marked as submitted', () => {\r\n    const resultState = markAsSubmittedReducer(INITIAL_STATE_FULL, new MarkAsSubmittedAction(FORM_CONTROL_INNER5_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n});\r\n"]}