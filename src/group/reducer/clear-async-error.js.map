{"version":3,"file":"clear-async-error.js","sourceRoot":"","sources":["clear-async-error.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,yCAA+D;AAC/D,qCAA0E;AAC1E,+BAAsC;AAEtC,gCACE,KAA6B,EAC7B,MAAuB;IAEvB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,+BAAqB,CAAC,IAAI,CAAC,CAAC,CAAC;QAC/C,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,mBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,EAAE,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9D,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,IAAM,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;IAEvC,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;IAE1B,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,gBAAQ,KAAK,CAAC,MAAM,CAAE,CAAC;QAC7B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,IAAM,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,MAAM,CAAC,OAAO,CAAC,IAAI,EAAzB,CAAyB,CAAC,CAAC;IAE3F,MAAM,CAAC,yBAAiB,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,kBAAkB,EAAE,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAC3H,CAAC;AA5BD,wDA4BC","sourcesContent":["import { Actions, ClearAsyncErrorAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function clearAsyncErrorReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== ClearAsyncErrorAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (state.pendingValidations.indexOf(action.payload.name) < 0) {\r\n    return state;\r\n  }\r\n\r\n  const name = '$' + action.payload.name;\r\n\r\n  let errors = state.errors;\r\n\r\n  if (errors.hasOwnProperty(name)) {\r\n    errors = { ...state.errors };\r\n    delete errors[name];\r\n  }\r\n\r\n  const pendingValidations = state.pendingValidations.filter(v => v !== action.payload.name);\r\n\r\n  return computeGroupState(state.id, state.controls, state.value, errors, pendingValidations, state.userDefinedProperties);\r\n}\r\n"]}