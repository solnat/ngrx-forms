{"version":3,"file":"add-control.spec.js","sourceRoot":"","sources":["add-control.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { AddGroupControlAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { addControlReducer } from './add-control';\r\nimport { FORM_CONTROL_ID, FormGroupValue, INITIAL_STATE } from './test-util';\r\n\r\ndescribe(`form group ${addControlReducer.name}`, () => {\r\n  it('should create child state for control child', () => {\r\n    const value = 'B';\r\n    const action = new AddGroupControlAction<FormGroupValue>(FORM_CONTROL_ID, 'inner2', value);\r\n    const resultState = addControlReducer<FormGroupValue>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual({ inner: '', inner2: value });\r\n    expect(resultState.controls.inner2.value).toEqual(value);\r\n  });\r\n\r\n  it('should create child state for group child', () => {\r\n    const value = { inner4: 'D' };\r\n    const action = new AddGroupControlAction<FormGroupValue>(FORM_CONTROL_ID, 'inner3', value);\r\n    const resultState = addControlReducer<FormGroupValue>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual({ inner: '', inner3: value });\r\n    expect(resultState.controls.inner3.value).toBe(value);\r\n    expect(cast(resultState.controls.inner3)!.controls).toBeDefined();\r\n    expect(Array.isArray(cast(resultState.controls.inner3)!.controls)).toBe(false);\r\n  });\r\n\r\n  it('should create child state for array child', () => {\r\n    const value = ['A'];\r\n    const action = new AddGroupControlAction<FormGroupValue>(FORM_CONTROL_ID, 'inner5', value);\r\n    const resultState = addControlReducer<FormGroupValue>(INITIAL_STATE, action);\r\n    expect(resultState.value).toEqual({ inner: '', inner5: value });\r\n    expect(resultState.controls.inner5.value).toBe(value);\r\n    expect(cast(resultState.controls.inner5)!.controls).toBeDefined();\r\n    expect(Array.isArray(cast(resultState.controls.inner5)!.controls)).toBe(true);\r\n  });\r\n\r\n  it('should throw if trying to add existing control', () => {\r\n    const action = new AddGroupControlAction<FormGroupValue>(FORM_CONTROL_ID, 'inner', '');\r\n    expect(() => addControlReducer<FormGroupValue>(INITIAL_STATE, action)).toThrowError();\r\n  });\r\n});\r\n"]}