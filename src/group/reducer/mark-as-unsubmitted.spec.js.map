{"version":3,"file":"mark-as-unsubmitted.spec.js","sourceRoot":"","sources":["mark-as-unsubmitted.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { MarkAsUnsubmittedAction } from '../../actions';\r\nimport { cast } from '../../state';\r\nimport { markAsUnsubmittedReducer } from './mark-as-unsubmitted';\r\nimport {\r\n  FORM_CONTROL_ID,\r\n  FORM_CONTROL_INNER2_ID,\r\n  FORM_CONTROL_INNER3_ID,\r\n  FORM_CONTROL_INNER5_ID,\r\n  FORM_CONTROL_INNER_ID,\r\n  INITIAL_STATE,\r\n  INITIAL_STATE_FULL,\r\n  setPropertiesRecursively,\r\n} from './test-util';\r\n\r\ndescribe(`form group ${markAsUnsubmittedReducer.name}`, () => {\r\n  it('should update state if submitted', () => {\r\n    const state = { ...INITIAL_STATE, isSubmitted: true, isUnsubmitted: false };\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.isSubmitted).toEqual(false);\r\n    expect(resultState.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should not update state if unsubmitted', () => {\r\n    const resultState = markAsUnsubmittedReducer(INITIAL_STATE, new MarkAsUnsubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState).toBe(INITIAL_STATE);\r\n  });\r\n\r\n  it('should mark control children as unsubmitted', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner.isSubmitted).toEqual(false);\r\n    expect(resultState.controls.inner.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should mark group children as unsubmitted', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner3.isSubmitted).toEqual(false);\r\n    expect(resultState.controls.inner3.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should mark array children as unsubmitted', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_ID));\r\n    expect(resultState.controls.inner3.isSubmitted).toEqual(false);\r\n    expect(resultState.controls.inner3.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as unsubmitted if all children are unsubmitted when control child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(\r\n      INITIAL_STATE_FULL,\r\n      [['isSubmitted', true], ['isUnsubmitted', false]],\r\n      FORM_CONTROL_INNER2_ID,\r\n      FORM_CONTROL_INNER3_ID,\r\n      FORM_CONTROL_INNER5_ID,\r\n    ));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_INNER_ID));\r\n    expect(resultState.isSubmitted).toEqual(false);\r\n    expect(resultState.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should not mark state as unsubmitted if not all children are unsubmitted when control child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(INITIAL_STATE_FULL, [['isSubmitted', true], ['isUnsubmitted', false]]));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_INNER_ID));\r\n    expect(resultState.isSubmitted).toEqual(true);\r\n    expect(resultState.isUnsubmitted).toEqual(false);\r\n  });\r\n\r\n  it('should mark state as unsubmitted if all children are unsubmitted when group child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(\r\n      INITIAL_STATE_FULL,\r\n      [['isSubmitted', true], ['isUnsubmitted', false]],\r\n      FORM_CONTROL_INNER_ID,\r\n      FORM_CONTROL_INNER2_ID,\r\n      FORM_CONTROL_INNER5_ID,\r\n    ));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_INNER3_ID));\r\n    expect(resultState.isSubmitted).toEqual(false);\r\n    expect(resultState.isUnsubmitted).toEqual(true);\r\n  });\r\n\r\n  it('should mark state as unsubmitted if all children are unsubmitted when array child is updated', () => {\r\n    const state = cast(setPropertiesRecursively(\r\n      INITIAL_STATE_FULL,\r\n      [['isSubmitted', true], ['isUnsubmitted', false]],\r\n      FORM_CONTROL_INNER_ID,\r\n      FORM_CONTROL_INNER2_ID,\r\n      FORM_CONTROL_INNER3_ID,\r\n    ));\r\n    const resultState = markAsUnsubmittedReducer(state, new MarkAsUnsubmittedAction(FORM_CONTROL_INNER5_ID));\r\n    expect(resultState.isSubmitted).toEqual(false);\r\n    expect(resultState.isUnsubmitted).toEqual(true);\r\n  });\r\n});\r\n"]}