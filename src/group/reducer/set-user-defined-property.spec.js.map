{"version":3,"file":"set-user-defined-property.spec.js","sourceRoot":"","sources":["set-user-defined-property.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,yCAA6D;AAC7D,yEAA4E;AAC5E,yCAAoF;AAEpF,QAAQ,CAAC,gBAAc,yDAA6B,CAAC,IAAM,EAAE;IAC3D,EAAE,CAAC,yCAAyC,EAAE;QAC5C,OAAA,MAAM,CAAC,yDAA6B,CAAC,yBAAa,EAAE,EAAE,IAAI,EAAE,EAAE,EAAS,CAAC,CAAC,CAAC,IAAI,CAAC,yBAAa,CAAC;IAA7F,CAA6F,CAAC,CAAC;IAEjG,EAAE,CAAC,0DAA0D,EAAE;QAC7D,IAAM,IAAI,GAAG,MAAM,CAAC;QACpB,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,WAAW,GAAG,yDAA6B,CAAC,yBAAa,EAAE,IAAI,sCAA4B,CAAC,2BAAe,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACjI,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,OAAO;YAC/C,GAAC,IAAI,IAAG,KAAK;gBACb,CAAC;;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE;QAC5D,IAAM,IAAI,GAAG,MAAM,CAAC;QACpB,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,KAAK,gBAAQ,yBAAa,IAAE,qBAAqB,YAAI,GAAC,IAAI,IAAG,KAAK,QAAI,CAAC;QAC7E,IAAM,WAAW,GAAG,yDAA6B,CAAC,KAAK,EAAE,IAAI,sCAA4B,CAAC,2BAAe,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACzH,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;IAClC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE;QAC7D,IAAM,IAAI,GAAG,MAAM,CAAC;QACpB,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,WAAW,GAAG,yDAA6B,CAAC,yBAAa,EAAE,IAAI,sCAA4B,CAAC,iCAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACvI,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC,OAAO;YAC9D,GAAC,IAAI,IAAG,KAAK;gBACb,CAAC;;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { SetUserDefinedPropertyAction } from '../../actions';\r\nimport { setUserDefinedPropertyReducer } from './set-user-defined-property';\r\nimport { FORM_CONTROL_ID, FORM_CONTROL_INNER_ID, INITIAL_STATE } from './test-util';\r\n\r\ndescribe(`form group ${setUserDefinedPropertyReducer.name}`, () => {\r\n  it('should skip any actionof the wrong type', () =>\r\n    expect(setUserDefinedPropertyReducer(INITIAL_STATE, { type: '' } as any)).toBe(INITIAL_STATE));\r\n\r\n  it('should update state user defined properties if different', () => {\r\n    const prop = 'prop';\r\n    const value = 12;\r\n    const resultState = setUserDefinedPropertyReducer(INITIAL_STATE, new SetUserDefinedPropertyAction(FORM_CONTROL_ID, prop, value));\r\n    expect(resultState.userDefinedProperties).toEqual({\r\n      [prop]: value,\r\n    });\r\n  });\r\n\r\n  it('should not update state user defined properties if same', () => {\r\n    const prop = 'prop';\r\n    const value = 12;\r\n    const state = { ...INITIAL_STATE, userDefinedProperties: { [prop]: value } };\r\n    const resultState = setUserDefinedPropertyReducer(state, new SetUserDefinedPropertyAction(FORM_CONTROL_ID, prop, value));\r\n    expect(resultState).toBe(state);\r\n  });\r\n\r\n  it('should update state user defined properties for children', () => {\r\n    const prop = 'prop';\r\n    const value = 12;\r\n    const resultState = setUserDefinedPropertyReducer(INITIAL_STATE, new SetUserDefinedPropertyAction(FORM_CONTROL_INNER_ID, prop, value));\r\n    expect(resultState.controls.inner.userDefinedProperties).toEqual({\r\n      [prop]: value,\r\n    });\r\n  });\r\n});\r\n"]}