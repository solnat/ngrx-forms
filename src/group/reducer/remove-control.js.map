{"version":3,"file":"remove-control.js","sourceRoot":"","sources":["remove-control.ts"],"names":[],"mappings":";;AAAA,yCAAkE;AAClE,qCAA0E;AAC1E,+BAAsC;AAEtC,8BACE,KAA6B,EAC7B,MAAuB;IAEvB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,kCAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,mBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACrC,CAAC;IAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD,MAAM,IAAI,KAAK,CAAC,YAAU,KAAK,CAAC,EAAE,uCAAkC,MAAM,CAAC,OAAO,CAAC,IAAI,OAAI,CAAC,CAAC,CAAC,KAAK;IACrG,CAAC;IAED,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;IACnD,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAErC,MAAM,CAAC,yBAAiB,CACtB,KAAK,CAAC,EAAE,EACR,QAAQ,EACR,KAAK,CAAC,KAAK,EACX,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,kBAAkB,EACxB,KAAK,CAAC,qBAAqB,CAC5B,CAAC;AACJ,CAAC;AA3BD,oDA2BC","sourcesContent":["import { Actions, RemoveGroupControlAction } from '../../actions';\r\nimport { computeGroupState, FormGroupState, KeyValue } from '../../state';\r\nimport { childReducer } from './util';\r\n\r\nexport function removeControlReducer<TValue extends KeyValue>(\r\n  state: FormGroupState<TValue>,\r\n  action: Actions<TValue>,\r\n): FormGroupState<TValue> {\r\n  if (action.type !== RemoveGroupControlAction.TYPE) {\r\n    return state;\r\n  }\r\n\r\n  if (action.controlId !== state.id) {\r\n    return childReducer(state, action);\r\n  }\r\n\r\n  if (!state.controls.hasOwnProperty(action.payload.name)) {\r\n    throw new Error(`Group '${state.id}' does not have child control '${action.payload.name}'!`); // `;\r\n  }\r\n\r\n  const controls = Object.assign({}, state.controls);\r\n  delete controls[action.payload.name];\r\n\r\n  return computeGroupState(\r\n    state.id,\r\n    controls,\r\n    state.value,\r\n    state.errors,\r\n    state.pendingValidations,\r\n    state.userDefinedProperties,\r\n  );\r\n}\r\n"]}