{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["export function isEmpty(obj: object) {\r\n  return Object.keys(obj).length === 0;\r\n}\r\n\r\nexport function deepEquals<T>(t: T, t2: T, ...args: T[]) {\r\n  let i: any;\r\n  let l: any;\r\n  let leftChain: any;\r\n  let rightChain: any;\r\n\r\n  function compare2Objects(x: any, y: any) {\r\n    let p;\r\n\r\n    // remember that NaN === NaN returns false\r\n    // and isNaN(undefined) returns true\r\n    if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\r\n      return true;\r\n    }\r\n\r\n    // Compare primitives and functions.\r\n    // Check if both arguments link to the same object.\r\n    // Especially useful on the step where we compare prototypes\r\n    if (x === y) {\r\n      return true;\r\n    }\r\n\r\n    // Works in case when functions are created in constructor.\r\n    // Comparing dates is a common scenario. Another built-ins?\r\n    // We can even handle functions passed across iframes\r\n    if ((typeof x === 'function' && typeof y === 'function') ||\r\n      (x instanceof Date && y instanceof Date) ||\r\n      (x instanceof RegExp && y instanceof RegExp) ||\r\n      (x instanceof String && y instanceof String) ||\r\n      (x instanceof Number && y instanceof Number)) {\r\n      return x.toString() === y.toString();\r\n    }\r\n\r\n    // At last checking prototypes as good as we can\r\n    if (!(x instanceof Object && y instanceof Object)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\r\n      return false;\r\n    }\r\n\r\n    if (x.constructor !== y.constructor) {\r\n      return false;\r\n    }\r\n\r\n    if (x.prototype !== y.prototype) {\r\n      return false;\r\n    }\r\n\r\n    // Check for infinitive linking loops\r\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\r\n      return false;\r\n    }\r\n\r\n    // Quick checking of one object being a subset of another.\r\n    for (p in y) {\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        return false;\r\n      } else if (typeof y[p] !== typeof x[p]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // tslint:disable:forin\r\n    for (p in x) {\r\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\r\n        return false;\r\n      } else if (typeof y[p] !== typeof x[p]) {\r\n        return false;\r\n      }\r\n\r\n      switch (typeof (x[p])) {\r\n        case 'object':\r\n        case 'function':\r\n\r\n          leftChain.push(x);\r\n          rightChain.push(y);\r\n\r\n          if (!compare2Objects(x[p], y[p])) {\r\n            return false;\r\n          }\r\n\r\n          leftChain.pop();\r\n          rightChain.pop();\r\n          break;\r\n\r\n        default:\r\n          if (x[p] !== y[p]) {\r\n            return false;\r\n          }\r\n          break;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  if (arguments.length < 1) {\r\n    throw new Error('Need two or more arguments to compare');\r\n  }\r\n\r\n  for (i = 1, l = arguments.length; i < l; i++) {\r\n    leftChain = [];\r\n    rightChain = [];\r\n\r\n    if (!compare2Objects(arguments[0], arguments[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n"]}