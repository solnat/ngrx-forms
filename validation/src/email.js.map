{"version":3,"file":"email.js","sourceRoot":"","sources":["email.ts"],"names":[],"mappings":";;AAEA,2CAA2C;AAC3C,0DAA0D;AAC7C,QAAA,kCAAkC,GAAG,4LAA4L,CAAC;AAE/O;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AACH,eAAsB,KAAoB;IACxC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,EAAE,CAAC,CAAC,0CAAkC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,CAAC;QACL,KAAK,EAAE;YACL,OAAO,EAAE,0CAAkC,CAAC,QAAQ,EAAE;YACtD,MAAM,EAAE,KAAK;SACd;KACF,CAAC;AACJ,CAAC;AAfD,sBAeC","sourcesContent":["import { ValidationErrors } from 'ngrx-forms';\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// this regex is taken from the @angular/forms source code\r\nexport const NGRX_FORMS_EMAIL_VALIDATION_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\r\n\r\n/**\r\n * A validation function that requires a value to be a valid e-mail address.\r\n * Considers `null` and `''` as valid. Combine this function with the\r\n * `required` validation function if these values should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n * ```typescript\r\n * {\r\n *   email: {\r\n *     pattern: string;\r\n *     actual: string;\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n * ```typescript\r\n * updateGroup<MyFormValue>({\r\n *  userMailAddress: validate(email),\r\n * })\r\n * ```\r\n */\r\nexport function email(value: string | null): ValidationErrors {\r\n  if (value === null || value.length === 0) {\r\n    return {};\r\n  }\r\n\r\n  if (NGRX_FORMS_EMAIL_VALIDATION_REGEXP.test(value)) {\r\n    return {};\r\n  }\r\n\r\n  return {\r\n    email: {\r\n      pattern: NGRX_FORMS_EMAIL_VALIDATION_REGEXP.toString(),\r\n      actual: value,\r\n    },\r\n  };\r\n}\r\n"]}