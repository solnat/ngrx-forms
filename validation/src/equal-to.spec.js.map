{"version":3,"file":"equal-to.spec.js","sourceRoot":"","sources":["equal-to.spec.ts"],"names":[],"mappings":";;AAAA,uCAAqC;AAErC,QAAQ,CAAC,kBAAO,CAAC,IAAI,EAAE;IACrB,EAAE,CAAC,2DAA2D,EAAE;QAC9D,MAAM,CAAC,kBAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE;QAC9D,MAAM,CAAC,kBAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE;QAC9D,IAAM,SAAS,GAAG,CAAC,CAAC;QACpB,IAAM,WAAW,GAAG,CAAC,CAAC;QACtB,MAAM,CAAC,kBAAO,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC;YAC9C,OAAO,EAAE;gBACP,SAAS,WAAA;gBACT,MAAM,EAAE,WAAW;aACpB;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { equalTo } from './equal-to';\r\n\r\ndescribe(equalTo.name, () => {\r\n  it('should not return an error if value is equal to comparand', () => {\r\n    expect(equalTo(1)(1)).toEqual({});\r\n  });\r\n\r\n  it('should return an error if value is not equal to comparand', () => {\r\n    expect(equalTo(1)(0)).not.toEqual({});\r\n  });\r\n\r\n  it('should return errors with comparand and actual properties', () => {\r\n    const comparand = 1;\r\n    const actualValue = 0;\r\n    expect(equalTo(comparand)(actualValue)).toEqual({\r\n      equalTo: {\r\n        comparand,\r\n        actual: actualValue,\r\n      },\r\n    });\r\n  });\r\n});\r\n"]}