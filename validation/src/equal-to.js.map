{"version":3,"file":"equal-to.js","sourceRoot":"","sources":["equal-to.ts"],"names":[],"mappings":";;AAEA;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,iBAA2B,SAAY;IACrC,MAAM,CAAC,UAAC,KAAQ;QACd,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACxB,MAAM,CAAC,EAAE,CAAC;QACZ,CAAC;QAED,MAAM,CAAC;YACL,OAAO,EAAE;gBACP,SAAS,WAAA;gBACT,MAAM,EAAE,KAAK;aACd;SACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAbD,0BAaC","sourcesContent":["import { ValidationErrors } from 'ngrx-forms';\r\n\r\n/**\r\n * A validation function that requires the value to be strictly equal (i.e. `===`) to another value.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n * ```typescript\r\n * {\r\n *   equalTo: {\r\n *     comparand: T;\r\n *     actual: T;\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n * ```typescript\r\n * updateGroup<MyFormValue>({\r\n *  name: validate(equalTo('John Doe')),\r\n * })\r\n * ```\r\n */\r\nexport function equalTo<T>(comparand: T) {\r\n  return (value: T): ValidationErrors => {\r\n    if (value === comparand) {\r\n      return {};\r\n    }\r\n\r\n    return {\r\n      equalTo: {\r\n        comparand,\r\n        actual: value,\r\n      },\r\n    };\r\n  };\r\n}\r\n"]}