{"version":3,"file":"required-true.js","sourceRoot":"","sources":["required-true.ts"],"names":[],"mappings":";;AAEA;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,sBAA6B,KAAqB;IAChD,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QACnB,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAED,MAAM,CAAC;QACL,QAAQ,EAAE;YACR,MAAM,EAAE,KAAK;SACd;KACF,CAAC;AACJ,CAAC;AAdD,oCAcC","sourcesContent":["import { ValidationErrors } from 'ngrx-forms';\r\n\r\n/**\r\n * A validation function that requires the value to be `true`.\r\n * Considers `null` as valid. Combine this function with the `required` validation\r\n * function if `null` should be considered invalid.\r\n *\r\n * The validation error returned by this validation function has the following shape:\r\n *\r\n * ```typescript\r\n * {\r\n *   required: {\r\n *     actual: boolean;\r\n *   };\r\n * }\r\n * ```\r\n *\r\n * Usually you would use this validation function in conjunction with the `validate`\r\n * update function to perform synchronous validation in your reducer:\r\n *\r\n * ```typescript\r\n * updateGroup<MyFormValue>({\r\n *  agreeWithTermsOfService: validate(requiredTrue),\r\n * })\r\n * ```\r\n */\r\nexport function requiredTrue(value: boolean | null): ValidationErrors {\r\n  if (value === null) {\r\n    return {};\r\n  }\r\n\r\n  if (value === true) {\r\n    return {};\r\n  }\r\n\r\n  return {\r\n    required: {\r\n      actual: value,\r\n    },\r\n  };\r\n}\r\n"]}